{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "metadata": {
        "title": "AusCtisExportTaggedIndicators",
        "description": "This playbook gets triggered every hour and perform the following actions:\n 1. Get all the threat intelligence indicators from Sentinel Workspace with given tag.\n 2. Filter all the indicators whose export in not completed.\n 3. Export the indicators to provided TAXII server. ",
        "prerequisites": [
            "1. Have TAXII Server Url, Collection ID, Username and Password handy before the deployment of the Playbook",
            "2. Tag the indicators that need to be exported, by default this playbook exports the indicators with tag 'ACSC Export', this can be changes during the deployment of playbook. Details on how to tag can be found [here](https://learn.microsoft.com/azure/sentinel/understand-threat-intelligence#view-and-manage-your-threat-indicators)"
        ],
        "postDeployment": [
            "This playbook needs contributor role on Log Analytics, to read and update threat indicator tags. 1. Go to Log Analytics Workspace resource --> 2. Select Access control (IAM) tab -->3. Add role assignments --> 4. Select Contributor role --> 5. In the Members tab choose 'Assign access to' Managed Identity --> 6. Click on 'Select members' --> 7. Provide correct Subscription and Managed Identity  --> 8. Provide the playbook name in 'Search by name' textbox --> 9. Select the correct identity and click on Select --> 10. Click on 'Review + assign' "
        ],
        "prerequisitesDeployTemplateFile": "",
        "lastUpdateTime": "2023-08-10T12:00:38Z",
        "entities": [
        ],
        "tags": [
            "Threat Intelligence"
        ],
        "support": {
            "tier": "community"
        },
        "author": {
            "name": "Australian Cyber Security Center"
        }
    },
    "parameters": {
        "PlaybookName": {
            "defaultValue": "AusCtisExportTaggedIndicators",
            "type": "string"
        },
        "TAXIIServerRootURL": {
            "type": "string",
            "metadata": {
                "description": "Enter TAXII API Root URL"
            }
        },
        "CollectionID": {
            "type": "string",
            "metadata": {
                "description": "Enter value for Collection ID"
            }
        },
        "TAXIIServerUsername": {
            "type": "string",
            "metadata": {
                "description": "Enter TAXII server username"
            }
        },
        "TAXIIServerPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Enter TAXII server password"
            }
        },
        "SentinelWorkspace": {
            "type": "string",
            "metadata": {
                "description": "Enter Sentinel Workspace name"
            }
        },
        "Tag for indicators to be exported": {
            "type": "string",
            "defaultValue": "ACSC Export",
            "metadata": {
                "description": "Enter value for Tag for indicators to be exported"
            }
        },
        "Tag for indicator export completion": {
            "type": "string",
            "defaultValue": "ACSC Export Complete",
            "metadata": {
                "description": "Enter value for Tag for indicator export completion"
            }
        }
    },
    "variables": {
        "SubscriptionID": "[subscription().subscriptionId]",
        "ResourceGroup": "[resourceGroup().name]",
        "azure": "[concat('https://management','.azure','.com')]"
    },
    "resources": [
        {
            "properties": {
                "provisioningState": "Succeeded",
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "CollectionID": {
                            "defaultValue": "[parameters('CollectionID')]",
                            "type": "string"
                        },
                        "ResourceGroup": {
                            "defaultValue": "[variables('ResourceGroup')]",
                            "type": "string"
                        },
                        "SubscriptionID": {
                            "defaultValue": "[variables('SubscriptionID')]",
                            "type": "string"
                        },
                        "TAXIIServerRootURL": {
                            "defaultValue": "[parameters('TAXIIServerRootURL')]",
                            "type": "string"
                        },
                        "TAXIIServerPassword": {
                            "defaultValue": "[parameters('TAXIIServerPassword')]",
                            "type": "securestring"
                        },
                        "TAXIIServerUsername": {
                            "defaultValue": "[parameters('TAXIIServerUsername')]",
                            "type": "string"
                        },
                        "Tag for indicator export completion": {
                            "defaultValue": "[parameters('Tag for indicator export completion')]",
                            "type": "string"
                        },
                        "Tag for indicators to be exported": {
                            "defaultValue": "[parameters('Tag for indicators to be exported')]",
                            "type": "string"
                        },
                        "Workspace": {
                            "defaultValue": "[parameters('SentinelWorkspace')]",
                            "type": "string"
                        }
                    },
                    "triggers": {
                        "Recurrence_trigger_once_per_day": {
                            "recurrence": {
                                "frequency": "Day",
                                "interval": 1
                            },
                            "evaluatedRecurrence": {
                                "frequency": "Hour",
                                "interval": 1
                            },
                            "type": "Recurrence"
                        }
                    },
                    "actions": {
                        "Filter_array_of_indicators_where_tags_contain_Export": {
                            "runAfter": {
                                "Parse_JSON_queryIndicators_response": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Query",
                            "inputs": {
                                "from": "@body('Parse_JSON_queryIndicators_response')?['value']",
                                "where": "@contains(item()?['properties']?['threatIntelligenceTags'], parameters('Tag for indicators to be exported'))"
                            }
                        },
                        "Filter_array_of_indicators_where_tags_do_not_contain_Export_Complete": {
                            "runAfter": {
                                "Filter_array_of_indicators_where_tags_contain_Export": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Query",
                            "inputs": {
                                "from": "@body('Filter_array_of_indicators_where_tags_contain_Export')",
                                "where": "@not(contains(item()?['properties']?['threatIntelligenceTags'], parameters('Tag for indicator export completion')))"
                            }
                        },
                        "For_each_Indicator": {
                            "foreach": "@body('Filter_array_of_indicators_where_tags_do_not_contain_Export_Complete')",
                            "actions": {
                                "Append_to_array_Indicators": {
                                    "runAfter": {
                                        "Condition_to_check_if_'killChainPhases'_property_exist": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "AppendToArrayVariable",
                                    "inputs": {
                                        "name": "Indicators",
                                        "value": "@variables('Indicator')"
                                    }
                                },
                                "Compose_mandatory_properties": {
                                    "runAfter": {},
                                    "type": "Compose",
                                    "inputs": {
                                        "created": "@formatDateTime(string(items('For_each_Indicator')?['properties']?['created']), 'yyyy-MM-ddTHH:mm:ss.ffffffK')",
                                        "id": "indicator--@{guid()}",
                                        "modified": "@formatDateTime(string(items('For_each_Indicator')?['properties']?['lastUpdatedTimeUtc']), 'yyyy-MM-ddTHH:mm:ss.ffffffK')",
                                        "pattern": "@items('For_each_Indicator')?['properties']?['pattern']",
                                        "pattern_type": "@if(contains(createArray('stix', 'pcre', 'sigma', 'snort', 'suricata', 'yara'), string(items('For_each_Indicator')?['properties']?['patternType'])), string(items('For_each_Indicator')?['properties']?['patternType']), 'stix')",
                                        "spec_version": "2.1",
                                        "type": "indicator",
                                        "valid_from": "@formatDateTime(string(items('For_each_Indicator')?['properties']?['validFrom']), 'yyyy-MM-ddTHH:mm:ss.ffffffK')"
                                    }
                                },
                                "Condition_to_check_if_'confidence'_property_exist": {
                                    "actions": {
                                        "Compose_'confidence'_property": {
                                            "runAfter": {},
                                            "type": "Compose",
                                            "inputs": "@addProperty(variables('Indicator'), 'confidence', item()?['properties']?['confidence'])"
                                        },
                                        "Set_variable_Indicator_with_'confidence'_property": {
                                            "runAfter": {
                                                "Compose_'confidence'_property": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "SetVariable",
                                            "inputs": {
                                                "name": "Indicator",
                                                "value": "@outputs('Compose_''confidence''_property')"
                                            }
                                        }
                                    },
                                    "runAfter": {
                                        "Set_variable_Indicator_with_mandatory_properties": [
                                            "Succeeded"
                                        ]
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "not": {
                                                    "equals": [
                                                        "@items('For_each_Indicator')?['properties']?['confidence']",
                                                        "@null"
                                                    ]
                                                }
                                            }
                                        ]
                                    },
                                    "type": "If"
                                },
                                "Condition_to_check_if_'createdByRef'_property_exist": {
                                    "actions": {
                                        "Condition_to_chek_if_'createdByRef'_in_STIIX_format": {
                                            "actions": {
                                                "Compose_'created_by_ref'_property": {
                                                    "runAfter": {},
                                                    "type": "Compose",
                                                    "inputs": "@addProperty(variables('Indicator'), 'created_by_ref', item()?['properties']?['createdByRef'])"
                                                },
                                                "Set_variable_Indicator_with_'created_by_ref'_property": {
                                                    "runAfter": {
                                                        "Compose_'created_by_ref'_property": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "SetVariable",
                                                    "inputs": {
                                                        "name": "Indicator",
                                                        "value": "@outputs('Compose_''created_by_ref''_property')"
                                                    }
                                                }
                                            },
                                            "runAfter": {},
                                            "expression": {
                                                "and": [
                                                    {
                                                        "equals": [
                                                            "@startsWith(item()?['properties']?['createdByRef'], 'indicator--')",
                                                            "@true"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "type": "If"
                                        }
                                    },
                                    "runAfter": {
                                        "Condition_to_check_if_'displayName'_property_exist": [
                                            "Succeeded"
                                        ]
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "not": {
                                                    "equals": [
                                                        "@items('For_each_Indicator')?['properties']?['createdByRef']",
                                                        "@null"
                                                    ]
                                                }
                                            }
                                        ]
                                    },
                                    "type": "If"
                                },
                                "Condition_to_check_if_'description'_property_exist": {
                                    "actions": {
                                        "Compose_'description'_property": {
                                            "runAfter": {},
                                            "type": "Compose",
                                            "inputs": "@addProperty(variables('Indicator'), 'description', item()?['properties']?['description'])"
                                        },
                                        "Set_variable_Description": {
                                            "runAfter": {
                                                "Set_variable_Indicator_with_'description'_property": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "SetVariable",
                                            "inputs": {
                                                "name": "Description",
                                                "value": "@{item()?['properties']?['description']}"
                                            }
                                        },
                                        "Set_variable_Indicator_with_'description'_property": {
                                            "runAfter": {
                                                "Compose_'description'_property": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "SetVariable",
                                            "inputs": {
                                                "name": "Indicator",
                                                "value": "@outputs('Compose_''description''_property')"
                                            }
                                        }
                                    },
                                    "runAfter": {
                                        "Condition_to_check_if_'confidence'_property_exist": [
                                            "Succeeded"
                                        ]
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "not": {
                                                    "equals": [
                                                        "@items('For_each_Indicator')?['properties']?['description']",
                                                        "@null"
                                                    ]
                                                }
                                            }
                                        ]
                                    },
                                    "type": "If"
                                },
                                "Condition_to_check_if_'displayName'_property_exist": {
                                    "actions": {
                                        "Compose_'name'_property": {
                                            "runAfter": {},
                                            "type": "Compose",
                                            "inputs": "@addProperty(variables('Indicator'), 'name', item()?['properties']?['displayName'])"
                                        },
                                        "Set_variable_Indicator_with_'name'_property": {
                                            "runAfter": {
                                                "Compose_'name'_property": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "SetVariable",
                                            "inputs": {
                                                "name": "Indicator",
                                                "value": "@outputs('Compose_''name''_property')"
                                            }
                                        }
                                    },
                                    "runAfter": {
                                        "Condition_to_check_if_'language'_property_exist": [
                                            "Succeeded"
                                        ]
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "not": {
                                                    "equals": [
                                                        "@items('For_each_Indicator')?['properties']?['displayName']",
                                                        "@null"
                                                    ]
                                                }
                                            }
                                        ]
                                    },
                                    "type": "If"
                                },
                                "Condition_to_check_if_'extensions'_property_exist": {
                                    "actions": {
                                        "Condition_to_check_if_extension_definition_exist": {
                                            "actions": {
                                                "Compose_'extensions'_property": {
                                                    "runAfter": {},
                                                    "type": "Compose",
                                                    "inputs": "@addProperty(variables('Indicator'), 'extensions', item()?['properties']?['extensions'])"
                                                },
                                                "Set_variable_Indicator_with_'extensions'_property": {
                                                    "runAfter": {
                                                        "Compose_'extensions'_property": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "SetVariable",
                                                    "inputs": {
                                                        "name": "Indicator",
                                                        "value": "@outputs('Compose_''extensions''_property')"
                                                    }
                                                }
                                            },
                                            "runAfter": {},
                                            "expression": {
                                                "and": [
                                                    {
                                                        "not": {
                                                            "equals": [
                                                                "@indexOf(string(item()?['properties']?['extensions']), 'extension-definition--')",
                                                                -1
                                                            ]
                                                        }
                                                    }
                                                ]
                                            },
                                            "type": "If"
                                        }
                                    },
                                    "runAfter": {
                                        "Condition_to_check_if_'granularMarkings'_property_exist": [
                                            "Succeeded"
                                        ]
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "not": {
                                                    "equals": [
                                                        "@items('For_each_Indicator')?['properties']?['extensions']",
                                                        "@null"
                                                    ]
                                                }
                                            }
                                        ]
                                    },
                                    "type": "If"
                                },
                                "Condition_to_check_if_'externalReferences'_property_exist": {
                                    "actions": {
                                        "Condition_to_check_if__externalReferences_is_empty_array": {
                                            "actions": {
                                                "Compose_'external_references'_property": {
                                                    "runAfter": {},
                                                    "type": "Compose",
                                                    "inputs": "@addProperty(variables('Indicator'), 'external_references', item()?['properties']?['externalReferences'])"
                                                },
                                                "Set_variable_Indicator_with_'external_references'_property": {
                                                    "runAfter": {
                                                        "Compose_'external_references'_property": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "SetVariable",
                                                    "inputs": {
                                                        "name": "Indicator",
                                                        "value": "@outputs('Compose_''external_references''_property')"
                                                    }
                                                }
                                            },
                                            "runAfter": {},
                                            "expression": {
                                                "and": [
                                                    {
                                                        "not": {
                                                            "equals": [
                                                                "@length(item()?['properties']?['externalReferences'])",
                                                                0
                                                            ]
                                                        }
                                                    }
                                                ]
                                            },
                                            "type": "If"
                                        }
                                    },
                                    "runAfter": {
                                        "Condition_to_check_if_'revoked'_property_exist": [
                                            "Succeeded"
                                        ]
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "not": {
                                                    "equals": [
                                                        "@items('For_each_Indicator')?['properties']?['externalReferences']",
                                                        "@null"
                                                    ]
                                                }
                                            }
                                        ]
                                    },
                                    "type": "If"
                                },
                                "Condition_to_check_if_'granularMarkings'_property_exist": {
                                    "actions": {
                                        "Condition_to_check_if_granularMarkings_is_empty_array": {
                                            "actions": {
                                                "Compose_'granular_markings'_property": {
                                                    "runAfter": {},
                                                    "type": "Compose",
                                                    "inputs": "@addProperty(variables('Indicator'), 'granular_markings', item()?['properties']?['granularMarkings'])"
                                                },
                                                "Set_variable_Indicator_with_'granular_markings'_property": {
                                                    "runAfter": {
                                                        "Compose_'granular_markings'_property": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "SetVariable",
                                                    "inputs": {
                                                        "name": "Indicator",
                                                        "value": "@outputs('Compose_''granular_markings''_property')"
                                                    }
                                                }
                                            },
                                            "runAfter": {},
                                            "expression": {
                                                "and": [
                                                    {
                                                        "not": {
                                                            "equals": [
                                                                "@length(item()?['properties']?['granularMarkings'])",
                                                                0
                                                            ]
                                                        }
                                                    }
                                                ]
                                            },
                                            "type": "If"
                                        }
                                    },
                                    "runAfter": {
                                        "Condition_to_check_if_'objectMarkingRefs'_property_exist": [
                                            "Succeeded"
                                        ]
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "not": {
                                                    "equals": [
                                                        "@items('For_each_Indicator')?['properties']?['granular_markings']",
                                                        "@null"
                                                    ]
                                                }
                                            }
                                        ]
                                    },
                                    "type": "If"
                                },
                                "Condition_to_check_if_'indicatorTypes'_property_exist": {
                                    "actions": {
                                        "Condition_to_check_if_indicatorTypes_is_empty_array": {
                                            "actions": {
                                                "Compose_'indicator_types'_property": {
                                                    "runAfter": {},
                                                    "type": "Compose",
                                                    "inputs": "@addProperty(variables('Indicator'), 'indicator_types', item()?['properties']?['indicatorTypes'])"
                                                },
                                                "Set_variable_Indicator_with_'indicator_types'_property": {
                                                    "runAfter": {
                                                        "Compose_'indicator_types'_property": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "SetVariable",
                                                    "inputs": {
                                                        "name": "Indicator",
                                                        "value": "@outputs('Compose_''indicator_types''_property')"
                                                    }
                                                }
                                            },
                                            "runAfter": {},
                                            "expression": {
                                                "and": [
                                                    {
                                                        "not": {
                                                            "equals": [
                                                                "@length(item()?['properties']?['indicatorTypes'])",
                                                                0
                                                            ]
                                                        }
                                                    }
                                                ]
                                            },
                                            "type": "If"
                                        }
                                    },
                                    "runAfter": {
                                        "Condition_to_check_if_'extensions'_property_exist": [
                                            "Succeeded"
                                        ]
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "not": {
                                                    "equals": [
                                                        "@items('For_each_Indicator')?['properties']?['indicatorTypes']",
                                                        "@null"
                                                    ]
                                                }
                                            }
                                        ]
                                    },
                                    "type": "If"
                                },
                                "Condition_to_check_if_'killChainPhases'_property_exist": {
                                    "actions": {
                                        "Condition_to_check_if_killChainPhases_is_empty_array": {
                                            "actions": {
                                                "Compose_'kill_chain_phases'_property": {
                                                    "runAfter": {},
                                                    "type": "Compose",
                                                    "inputs": "@addProperty(variables('Indicator'), 'kill_chain_phases', item()?['properties']?['killChainPhases'])"
                                                },
                                                "Set_variable_Indicator_with_'kill_chain_phases'_property": {
                                                    "runAfter": {
                                                        "Compose_'kill_chain_phases'_property": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "SetVariable",
                                                    "inputs": {
                                                        "name": "Indicator",
                                                        "value": "@outputs('Compose_''kill_chain_phases''_property')"
                                                    }
                                                }
                                            },
                                            "runAfter": {},
                                            "expression": {
                                                "and": [
                                                    {
                                                        "not": {
                                                            "equals": [
                                                                "@length(item()?['properties']?['killChainPhases'])",
                                                                0
                                                            ]
                                                        }
                                                    }
                                                ]
                                            },
                                            "type": "If"
                                        }
                                    },
                                    "runAfter": {
                                        "Condition_to_check_if_'validUntil'_property_exist": [
                                            "Succeeded"
                                        ]
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "not": {
                                                    "equals": [
                                                        "@items('For_each_Indicator')?['properties']?['killChainPhases']",
                                                        "@null"
                                                    ]
                                                }
                                            }
                                        ]
                                    },
                                    "type": "If"
                                },
                                "Condition_to_check_if_'labels'_property_exist": {
                                    "actions": {
                                        "Add_Incidet_ID_to_Description": {
                                            "actions": {
                                                "Condition_to_check_if_Incident_tag_is_present": {
                                                    "actions": {
                                                        "Condition_to_check_if_Description_is_not_null": {
                                                            "actions": {
                                                                "Concat_IncidentTag_with_Description_": {
                                                                    "runAfter": {},
                                                                    "type": "Compose",
                                                                    "inputs": "@setProperty(variables('Indicator'), 'description', concat('[',variables('IncidentTag'), '] ', item()?['properties']?['description']))"
                                                                },
                                                                "Set_variable_Indicator_with_updated_Description": {
                                                                    "runAfter": {
                                                                        "Concat_IncidentTag_with_Description_": [
                                                                            "Succeeded"
                                                                        ]
                                                                    },
                                                                    "type": "SetVariable",
                                                                    "inputs": {
                                                                        "name": "Indicator",
                                                                        "value": "@outputs('Concat_IncidentTag_with_Description_')"
                                                                    }
                                                                }
                                                            },
                                                            "runAfter": {
                                                                "For_each_Lable_in_Lables": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "else": {
                                                                "actions": {
                                                                    "Compose_description_as_IncidentTag": {
                                                                        "runAfter": {},
                                                                        "type": "Compose",
                                                                        "inputs": "@setProperty(variables('Indicator'), 'description', concat('[', variables('IncidentTag'), ']'))"
                                                                    },
                                                                    "Set_variable_Indicator_with_description_as_IncidentTag": {
                                                                        "runAfter": {
                                                                            "Compose_description_as_IncidentTag": [
                                                                                "Succeeded"
                                                                            ]
                                                                        },
                                                                        "type": "SetVariable",
                                                                        "inputs": {
                                                                            "name": "Indicator",
                                                                            "value": "@outputs('Compose_description_as_IncidentTag')"
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "expression": {
                                                                "and": [
                                                                    {
                                                                        "not": {
                                                                            "equals": [
                                                                                "@variables('Description')",
                                                                                "@null"
                                                                            ]
                                                                        }
                                                                    }
                                                                ]
                                                            },
                                                            "type": "If"
                                                        },
                                                        "For_each_Lable_in_Lables": {
                                                            "foreach": "@variables('Lables')",
                                                            "actions": {
                                                                "Condition_to_check_if_it_is_incident_tag": {
                                                                    "actions": {
                                                                        "Set_variable_IncidentTag": {
                                                                            "runAfter": {},
                                                                            "type": "SetVariable",
                                                                            "inputs": {
                                                                                "name": "IncidentTag",
                                                                                "value": "@{string(items('For_each_Lable_in_Lables'))}"
                                                                            }
                                                                        }
                                                                    },
                                                                    "runAfter": {},
                                                                    "expression": {
                                                                        "and": [
                                                                            {
                                                                                "equals": [
                                                                                    "@contains(toLower(items('For_each_Lable_in_Lables')), 'incident id:')",
                                                                                    "@true"
                                                                                ]
                                                                            }
                                                                        ]
                                                                    },
                                                                    "type": "If"
                                                                }
                                                            },
                                                            "runAfter": {},
                                                            "type": "Foreach"
                                                        }
                                                    },
                                                    "runAfter": {},
                                                    "expression": {
                                                        "and": [
                                                            {
                                                                "equals": [
                                                                    "@contains(toLower(join(variables('Lables'), '|')), 'incident id:')",
                                                                    "@true"
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    "type": "If"
                                                }
                                            },
                                            "runAfter": {
                                                "Condition_to_check_if_TLP_tag_not_present": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Scope"
                                        },
                                        "Compose_'labels'_property": {
                                            "runAfter": {
                                                "Add_Incidet_ID_to_Description": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Compose",
                                            "inputs": "@addProperty(variables('Indicator'), 'labels', variables('Lables'))"
                                        },
                                        "Condition_to_check_if_TLP_tag_not_present": {
                                            "actions": {
                                                "Append_to_array_Lables": {
                                                    "runAfter": {},
                                                    "type": "AppendToArrayVariable",
                                                    "inputs": {
                                                        "name": "Lables",
                                                        "value": "@string('TLP:WHITE')"
                                                    }
                                                }
                                            },
                                            "runAfter": {
                                                "Set_array_Lables": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "expression": {
                                                "and": [
                                                    {
                                                        "equals": [
                                                            "@contains(toLower(join(items('For_each_Indicator')?['properties']?['labels'], '|')), 'tlp:')",
                                                            "@false"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "type": "If"
                                        },
                                        "Set_array_Lables": {
                                            "runAfter": {},
                                            "type": "SetVariable",
                                            "inputs": {
                                                "name": "Lables",
                                                "value": "@items('For_each_Indicator')?['properties']?['labels']"
                                            }
                                        },
                                        "Set_variable_Indicator_with_'labels'_property": {
                                            "runAfter": {
                                                "Compose_'labels'_property": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "SetVariable",
                                            "inputs": {
                                                "name": "Indicator",
                                                "value": "@outputs('Compose_''labels''_property')"
                                            }
                                        }
                                    },
                                    "runAfter": {
                                        "Condition_to_check_if_'createdByRef'_property_exist": [
                                            "Succeeded"
                                        ]
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "not": {
                                                    "equals": [
                                                        "@items('For_each_Indicator')?['properties']?['labels']",
                                                        "@null"
                                                    ]
                                                }
                                            }
                                        ]
                                    },
                                    "type": "If"
                                },
                                "Condition_to_check_if_'language'_property_exist": {
                                    "actions": {
                                        "Compose_'lang'_property": {
                                            "runAfter": {},
                                            "type": "Compose",
                                            "inputs": "@addProperty(variables('Indicator'), 'lang', item()?['properties']?['language'])"
                                        },
                                        "Set_variable_Indicator_with_'lang'_property": {
                                            "runAfter": {
                                                "Compose_'lang'_property": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "SetVariable",
                                            "inputs": {
                                                "name": "Indicator",
                                                "value": "@outputs('Compose_''lang''_property')"
                                            }
                                        }
                                    },
                                    "runAfter": {
                                        "Condition_to_check_if_'description'_property_exist": [
                                            "Succeeded"
                                        ]
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "not": {
                                                    "equals": [
                                                        "@items('For_each_Indicator')?['properties']?['language']",
                                                        "@null"
                                                    ]
                                                }
                                            }
                                        ]
                                    },
                                    "type": "If"
                                },
                                "Condition_to_check_if_'objectMarkingRefs'_property_exist": {
                                    "actions": {
                                        "Condition_to_check_if_objectMarkingRefs_is_empty_array": {
                                            "actions": {
                                                "Compose_'object_marking_refs'_property": {
                                                    "runAfter": {},
                                                    "type": "Compose",
                                                    "inputs": "@addProperty(variables('Indicator'), 'object_marking_refs', item()?['properties']?['objectMarkingRefs'])"
                                                },
                                                "Set_variable_Indicator_with_'object_marking_refs'_property": {
                                                    "runAfter": {
                                                        "Compose_'object_marking_refs'_property": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "SetVariable",
                                                    "inputs": {
                                                        "name": "Indicator",
                                                        "value": "@outputs('Compose_''object_marking_refs''_property')"
                                                    }
                                                }
                                            },
                                            "runAfter": {},
                                            "expression": {
                                                "and": [
                                                    {
                                                        "not": {
                                                            "equals": [
                                                                "@length(item()?['properties']?['objectMarkingRefs'])",
                                                                0
                                                            ]
                                                        }
                                                    }
                                                ]
                                            },
                                            "type": "If"
                                        }
                                    },
                                    "runAfter": {
                                        "Condition_to_check_if_'externalReferences'_property_exist": [
                                            "Succeeded"
                                        ]
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "not": {
                                                    "equals": [
                                                        "@items('For_each_Indicator')?['properties']?['objectMarkingRefs']",
                                                        "@null"
                                                    ]
                                                }
                                            }
                                        ]
                                    },
                                    "type": "If"
                                },
                                "Condition_to_check_if_'patternVersion'_property_exist": {
                                    "actions": {
                                        "Compose_'pattern_version'_property": {
                                            "runAfter": {},
                                            "type": "Compose",
                                            "inputs": "@addProperty(variables('Indicator'), 'pattern_version', item()?['properties']?['patternVersion'])"
                                        },
                                        "Set_variable_Indicator_with_'pattern_version'_property": {
                                            "runAfter": {
                                                "Compose_'pattern_version'_property": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "SetVariable",
                                            "inputs": {
                                                "name": "Indicator",
                                                "value": "@outputs('Compose_''pattern_version''_property')"
                                            }
                                        }
                                    },
                                    "runAfter": {
                                        "Condition_to_check_if_'indicatorTypes'_property_exist": [
                                            "Succeeded"
                                        ]
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "not": {
                                                    "equals": [
                                                        "@items('For_each_Indicator')?['properties']?['patternVersion']",
                                                        "@null"
                                                    ]
                                                }
                                            }
                                        ]
                                    },
                                    "type": "If"
                                },
                                "Condition_to_check_if_'revoked'_property_exist": {
                                    "actions": {
                                        "Compose_'revoked'_property": {
                                            "runAfter": {},
                                            "type": "Compose",
                                            "inputs": "@addProperty(variables('Indicator'), 'revoked', item()?['properties']?['revoked'])"
                                        },
                                        "Set_variable_Indicator_with_'revoked'_property": {
                                            "runAfter": {
                                                "Compose_'revoked'_property": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "SetVariable",
                                            "inputs": {
                                                "name": "Indicator",
                                                "value": "@outputs('Compose_''revoked''_property')"
                                            }
                                        }
                                    },
                                    "runAfter": {
                                        "Condition_to_check_if_'labels'_property_exist": [
                                            "Succeeded"
                                        ]
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "not": {
                                                    "equals": [
                                                        "@items('For_each_Indicator')?['properties']?['revoked']",
                                                        "@null"
                                                    ]
                                                }
                                            }
                                        ]
                                    },
                                    "type": "If"
                                },
                                "Condition_to_check_if_'validUntil'_property_exist": {
                                    "actions": {
                                        "Compose_'valid_until'_property": {
                                            "runAfter": {},
                                            "type": "Compose",
                                            "inputs": "@addProperty(variables('Indicator'), 'valid_until', formatDateTime(string(item()?['properties']?['validUntil']), 'yyyy-MM-ddTHH:mm:ss.ffffffK'))"
                                        },
                                        "Set_variable_Indicator_with_'valid_until'_property": {
                                            "runAfter": {
                                                "Compose_'valid_until'_property": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "SetVariable",
                                            "inputs": {
                                                "name": "Indicator",
                                                "value": "@outputs('Compose_''valid_until''_property')"
                                            }
                                        }
                                    },
                                    "runAfter": {
                                        "Condition_to_check_if_'patternVersion'_property_exist": [
                                            "Succeeded"
                                        ]
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "not": {
                                                    "equals": [
                                                        "@items('For_each_Indicator')?['properties']?['validUntil']",
                                                        "@null"
                                                    ]
                                                }
                                            }
                                        ]
                                    },
                                    "type": "If"
                                },
                                "Reset_variable_Indicator": {
                                    "runAfter": {
                                        "Append_to_array_Indicators": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "SetVariable",
                                    "inputs": {
                                        "name": "Indicator",
                                        "value": {}
                                    }
                                },
                                "Set_variable_Indicator_with_mandatory_properties": {
                                    "runAfter": {
                                        "Compose_mandatory_properties": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "SetVariable",
                                    "inputs": {
                                        "name": "Indicator",
                                        "value": "@outputs('Compose_mandatory_properties')"
                                    }
                                }
                            },
                            "runAfter": {
                                "Filter_array_of_indicators_where_tags_do_not_contain_Export_Complete": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach",
                            "runtimeConfiguration": {
                                "concurrency": {
                                    "repetitions": 1
                                }
                            }
                        },
                        "For_each_filtered_indicator": {
                            "actions": {
                                "HTTP_appendTags_request": {
                                    "inputs": {
                                        "authentication": {
                                            "type": "ManagedServiceIdentity"
                                        },
                                        "body": {
                                            "threatIntelligenceTags": [
                                                "@{parameters('Tag for indicator export completion')}"
                                            ]
                                        },
                                        "method": "POST",
                                        "uri": "https://management.azure.com/subscriptions/@{parameters('SubscriptionID')}/resourceGroups/@{parameters('ResourceGroup')}/providers/Microsoft.OperationalInsights/workspaces/@{parameters('Workspace')}/providers/Microsoft.SecurityInsights/threatIntelligence/main/indicators/@{items('For_each_filtered_indicator')?['name']}/appendTags?api-version=2021-10-01"
                                    },
                                    "runAfter": {},
                                    "type": "Http"
                                }
                            },
                            "foreach": "@body('Filter_array_of_indicators_where_tags_do_not_contain_Export_Complete')",
                            "runAfter": {
                                "HTTP_POST_stix_bundle_to_TAXII_server": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "HTTP_POST_stix_bundle_to_TAXII_server": {
                            "runAfter": {
                                "Initialize_variable_for_STIX_bundle_JSON": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http",
                            "inputs": {
                                "authentication": {
                                    "password": "@parameters('TAXIIServerPassword')",
                                    "type": "Basic",
                                    "username": "@parameters('TAXIIServerUsername')"
                                },
                                "body": "@variables('StixBundle')",
                                "headers": {
                                    "Accept": "application/taxii+json;version=2.1",
                                    "Content-type": "application/taxii+json;version=2.1"
                                },
                                "method": "POST",
                                "retryPolicy": {
                                    "type": "none"
                                },
                                "uri": "@{parameters('TAXIIServerRootURL')}/collections/@{parameters('CollectionID')}/objects/"
                            }
                        },
                        "HTTP_queryIndicators_request": {
                            "runAfter": {
                                "Initialize_variable_IncidentTag": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http",
                            "inputs": {
                                "authentication": {
                                    "type": "ManagedServiceIdentity"
                                },
                                "body": {
                                    "keywords": "tags:\"@{parameters('Tag for indicators to be exported')}\"",
                                    "pageSize": 100,
                                    "sortBy": [
                                        {
                                            "itemKey": "lastUpdatedTimeUtc",
                                            "sortOrder": "descending"
                                        }
                                    ]
                                },
                                "method": "POST",
                                "retryPolicy": {
                                    "type": "none"
                                },
                                "uri": "[uriComponentToString(uri(variables('azure'),'subscriptions/@{parameters(''SubscriptionID'')}/resourceGroups/@{parameters(''ResourceGroup'')}/providers/Microsoft.OperationalInsights/workspaces/@{parameters(''Workspace'')}/providers/Microsoft.SecurityInsights/threatIntelligence/main/queryIndicators?api-version=2022-06-01-preview'))]"
                            }
                        },
                        "Initialize_array_Indicators": {
                            "runAfter": {},
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "Indicators",
                                        "type": "array"
                                    }
                                ]
                            }
                        },
                        "Initialize_array_Lables": {
                            "runAfter": {
                                "Initialize_variable_Description": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "Lables",
                                        "type": "array"
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_Description": {
                            "runAfter": {
                                "Initialize_variable_Indicator": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "Description",
                                        "type": "string",
                                        "value": "@{null}"
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_IncidentTag": {
                            "runAfter": {
                                "Initialize_array_Lables": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "IncidentTag",
                                        "type": "string"
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_Indicator": {
                            "runAfter": {
                                "Initialize_array_Indicators": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "Indicator",
                                        "type": "object",
                                        "value": {}
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_for_STIX_bundle_JSON": {
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "StixBundle",
                                        "type": "string",
                                        "value": "{\n    \"type\": \"bundle\",\n    \"id\": \"bundle--1736e032-a96a-41e9-8302-126677d4d781\",\n    \"objects\": @{string(variables('Indicators'))}\n}"
                                    }
                                ]
                            },
                            "runAfter": {
                                "For_each_Indicator": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable"
                        },
                        "Parse_JSON_queryIndicators_response": {
                            "runAfter": {
                                "HTTP_queryIndicators_request": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ParseJson",
                            "inputs": {
                                "content": "@body('HTTP_queryIndicators_request')",
                                "schema": {
                                    "properties": {
                                        "value": {
                                            "items": {
                                                "properties": {
                                                    "etag": {
                                                        "type": "string"
                                                    },
                                                    "id": {
                                                        "type": "string"
                                                    },
                                                    "kind": {
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "properties": {
                                                        "properties": {
                                                            "confidence": {
                                                                "type": "integer"
                                                            },
                                                            "created": {
                                                                "type": "string"
                                                            },
                                                            "description": {
                                                                "type": "string"
                                                            },
                                                            "displayName": {
                                                                "type": "string"
                                                            },
                                                            "extensions": {
                                                                "properties": {
                                                                    "sentinel-ext": {
                                                                        "properties": {
                                                                            "severity": {
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "sentinelExtension": {
                                                                        "properties": {
                                                                            "severity": {
                                                                                "type": "integer"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "externalId": {
                                                                "type": "string"
                                                            },
                                                            "externalLastUpdatedTimeUtc": {
                                                                "type": "string"
                                                            },
                                                            "labels": {
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "lastUpdatedTimeUtc": {
                                                                "type": "string"
                                                            },
                                                            "objectMarkingRefs": {
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "parsedPattern": {
                                                                "items": {
                                                                    "properties": {
                                                                        "patternTypeKey": {
                                                                            "type": "string"
                                                                        },
                                                                        "patternTypeValues": {
                                                                            "items": {
                                                                                "properties": {
                                                                                    "value": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "valueType": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "required": [
                                                                                    "valueType",
                                                                                    "value"
                                                                                ],
                                                                                "type": "object"
                                                                            },
                                                                            "type": "array"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "patternTypeKey",
                                                                        "patternTypeValues"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "pattern": {
                                                                "type": "string"
                                                            },
                                                            "patternType": {
                                                                "type": "string"
                                                            },
                                                            "revoked": {
                                                                "type": "boolean"
                                                            },
                                                            "source": {
                                                                "type": "string"
                                                            },
                                                            "threatIntelligenceTags": {
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "threatTypes": {
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "validFrom": {
                                                                "type": "string"
                                                            },
                                                            "validUntil": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "id",
                                                    "name",
                                                    "etag",
                                                    "type",
                                                    "kind",
                                                    "properties"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "outputs": {
                    }
                },
                "parameters": {
                }
            },
            "name": "[parameters('PlaybookName')]",
            "type": "Microsoft.Logic/workflows",
            "location": "[resourceGroup().location]",
            "tags": {
                "hidden-SentinelTemplateName": "AusCtisExportTaggedIndicatorsv2",
                "hidden-SentinelTemplateVersion": "1.0"
            },
            "identity": {
                "type": "SystemAssigned"
            },
            "apiVersion": "2017-07-01",
            "dependsOn": [
            ]
        }
    ]
}
