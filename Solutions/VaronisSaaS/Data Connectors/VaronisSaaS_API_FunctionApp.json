{
  "id": "VaronisSaaS",
  "title": "Varonis SaaS",
  "publisher": "Varonis",
  "descriptionMarkdown": "Varonis SaaS provides the capability to ingest [Varonis Alerts](https://www.varonis.com/products/datalert) into Microsoft Sentinel.",
  "graphQueries": [
    {
      "baseQuery": "VaronisAlerts_CL",
      "legend": "Varonis alerts",
      "metricName": "Total data recieved"
    },
    {
      "baseQuery": "VaronisAlerts_CL\n| where severity_s == \"High\"",
      "legend": "High severity events",
      "metricName": "High severity events"
    },
    {
      "baseQuery": "VaronisAlerts_CL\n| where severity_s == \"Medium\"",
      "legend": "Medium severity events",
      "metricName": "Medium severity events"
    },
    {
      "baseQuery": "VaronisAlerts_CL\n| where severity_s == \"Low\"",
      "legend": "Low severity events",
      "metricName": "Low severity events"
    }
  ],
  "sampleQueries": [
    {
      "description": "List all Varonis Alerts",
      "query": "VaronisAlerts_CL\n| sort by TimeGenerated desc"
    }
  ],
  "dataTypes": [
    {
      "lastDataReceivedQuery": "VaronisAlerts_CL\n| summarize Time = max(TimeGenerated)\n| where isnotempty(Time)",
      "name": "VaronisAlerts_CL"
    }
  ],
  "connectivityCriterias": [
    {
      "type": "IsConnectedQuery",
      "value": [
        "VaronisAlerts_CL\n| summarize LastLogReceived = max(TimeGenerated)\n| project IsConnected = LastLogReceived > ago(3d)"
      ]
    }
  ],
  "availability": {
    "status": 1,
    "isPreview": true
  },
  "permissions": {
    "resourceProvider": [
      {
        "permissionsDisplayText": "Read and Write permissions on the Log Analytics workspace are required to enable the data connector",
        "provider": "Microsoft.OperationalInsights/workspaces",
        "providerDisplayName": "Workspace",
        "requiredPermissions": {
          "delete": true,
          "read": true,
          "write": true
        },
        "scope": "Workspace"
      }
    ],
    "customs": [
      {
        "name": "Microsoft.Web/sites permissions",
        "description": "Read and write permissions to Azure Functions to create a Function App is required. [See the documentation to learn more about Azure Functions](https://docs.microsoft.com/azure/azure-functions/)."
      }
    ]
  },
  "instructionSteps": [
    {
      "title": "",
      "description": ">**NOTE:** This connector uses Azure Functions to connect to Varonis DatAlert service to pull alerts into Azure Sentinel. This might result in additional data ingestion costs. Check the [Azure Functions pricing page](https://azure.microsoft.com/pricing/details/functions/) for details."
    },
    {
      "title": "",
      "description": "**For Azure function and related services installation use:**\n\n [![Deploy to Azure](https://aka.ms/deploytoazurebutton)](https://portal.azure.com/#create/Microsoft.Template/uri/https%3A%2F%2Fraw.githubusercontent.com%2FAzure%2FAzure-Sentinel%2Fmaster%2FSolutions%2FVaronisSaaS%2FData%2520Connectors%2Fazuredeploy.json)"
    },
    {
      "title": "",
      "description": "STEP 1 - Obtaining Varonis DatAlert Endpoint API credentials.\n\n1. Follow the instructions in the documentation to generate Client ID and API Key."
    },
    {
      "title": "",
      "description": "STEP 2 - Choose ONE from the following two deployment options to deploy the connector and the associated Azure Function.",
      "instructions": [
        {
          "parameters": {
            "fillWith": [
              "WorkspaceName"
            ],
            "label": "Workspace Name"
          },
          "type": "CopyableLabel"
        }
      ]
    },
    {
      "title": "Option 1 - Azure Resource Manager (ARM) Template",
      "description": "Use this method for automated deployment of the data connector using an ARM Template.\n\n1. Click the Deploy to Azure button below. \n\n\t[![Deploy to Azure](https://aka.ms/deploytoazurebutton)](https://portal.azure.com/#create/Microsoft.Template/uri/https%3A%2F%2Fraw.githubusercontent.com%2Fvkorenkov-varonis%2Fsentinel%2Fmaster%2Fazuredeploy.json)\n2. Select the preferred Subscription, Resource Group and Location, Function App plan SKU.\n3. Enter Log Analytics Workspace Name, DatAlert Host Name, Dat Alert Api Key.\n4. Click Review + Create, Create."
    },
    {
      "title": "Option 2 - Manual Deployment of Azure Functions",
      "description": "Use the following step-by-step instructions to deploy the data connector manually with Azure Functions (Deployment via Visual Studio Code)."
    },
    {
      "title": "",
      "description": "1. Deploy a Function App\n\n >NOTE: You will need to prepare VS code for Azure function development.\n1. Download the [Azure Function App file](https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Solutions/VaronisSaaS/Data%20Connectors/Varonis.Sentinel.Functions.zip). Extract archive to your local development computer.\n2. Start VS Code. Choose File in the main menu and select Open Folder.\n3. Select the top level folder from extracted files.\n4. Choose the Azure icon in the Activity bar, then in the Azure: Functions area, choose the Deploy to function app button. If you aren't already signed in, choose the Azure icon in the Activity bar, then in the Azure: Functions area, choose Sign in to Azure If you're already signed in, go to the next step.\n5. Provide the following information at the prompts:\n\t- Select folder: Choose a folder from your workspace or browse to one that contains your function app.\n\t- Select Subscription: Choose the subscription to use.\n\t- Select Create new Function App in Azure (Don't choose the Advanced option)\n\t- Enter a globally unique name for the function app: Type a name that is valid in a URL path. The name you type is validated to make sure that it's unique in Azure Functions.\n\t- Select a runtime: Choose DOTNET 6.0.\n\t- Select a location for new resources. For better performance and lower costs choose the same region where Microsoft Sentinel is located.\n\t6. Deployment will begin. A notification is displayed after your function app is created and the deployment package is applied.\n\t7. Go to Azure Portal for the Function App configuration."
    },
    {
      "title": "",
      "description": "2. Configure the Function App\n\n1. In the Function App, select the Function App Name and select Configuration.\n2. In the Application settings tab, select + New application setting.\n3. Add each of the following application settings individually, with their respective string values (case-sensitive): DatAlertHostName, DatAlertApiKey, LogAnalyticsKey, LogAnalyticsWorkspace, FirstFetchTime, Severities, ThreatModelNameList, Statuses\n4. Once all application settings have been entered, click Save."
    }
  ]
}