{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "functionName": {
            "type": "string",
            "metadata": {
                "description": "Specifies the name of the Function App."
            }
        },
        "apiEndpoint": {
            "type": "string",
            "metadata": {
                "description": "uri to the API endpoint to query data."
            },
            "defaultValue": "https://events.1password.com"
        },
        "functionSchedule": {
            "type": "string",
            "defaultValue": "0 */5 * * * *",
            "metadata": {
                "description": "Provide schedule in the form of a [cron expression](https://en.wikipedia.org/wiki/Cron#CRON_expression)"
            }
        },
        "dataCollectionEndpoint": {
            "type": "string",
            "metadata": {
                "description": "Specifies the name of the Data Collection Endpoint to create"
            }
        },
        "apiToken": {
            "type": "securestring",
            "metadata": {
                "description": "Specifies the API Key to connect to the API of 1Password"
            }
        },
        "packageUri": {
            "type": "string",
            "metadata": {
                "description": "Specifies the URI to the package to deploy"
            },
            "defaultValue": "https://github.com/azurekid/Azure-Sentinel/raw/feature/1password/Solutions/1Password/Data%20Connectors/1Password/function-updated.zip"
        }
    },
    "variables": {
        "storageAccountName": "[substring(concat(substring(tolower(replace(parameters('functionName'),'-', '')), 0, 9), uniqueString(resourceGroup().id)), 0, 20)]",
        "keyVaultName": "[substring(concat(substring(parameters('functionName'), 0, 9), uniqueString(resourceGroup().id)), 0, 20)]",
        "storageContainerName": "cursors",
        "storageSuffix": "[environment().suffixes.storage]",
        "keyVaultSecretReader": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', '4633458b-17de-408a-b874-0445c86b69e6')]",
        "metricsPublisher": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', '3913510d-42f4-4e42-8a64-420c390055eb')]",
        "uniqueRoleGuidMetricsPublisher": "[guid(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')))]",
        "uniqueRoleGuidKeyVaultSecretReader": "[guid(resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName')))]"
    },
    "resources": [
        {
            "type": "Microsoft.Insights/components",
            "apiVersion": "2015-05-01",
            "name": "[parameters('functionName')]",
            "location": "[resourceGroup().location]",
            "kind": "web",
            "properties": {
                "Application_Type": "web",
                "ApplicationId": "[parameters('functionName')]"
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults",
            "apiVersion": "2016-10-01",
            "name": "[variables('keyVaultName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('functionName'))]"
            ],
            "properties": {
                "sku": {
                    "family": "A",
                    "name": "Standard"
                },
                "tenantId": "[subscription().tenantId]",
                "enabledForDeployment": true,
                "enabledForDiskEncryption": false,
                "enabledForTemplateDeployment": true,
                "enableSoftDelete": true,
                "enableRbacAuthorization": true
            },
            "resources": [
                {
                    "type": "secrets",
                    "apiVersion": "2016-10-01",
                    "name": "AzureWebJobsStorage",
                    "dependsOn": [
                        "[resourceId('Microsoft.KeyVault/vaults/', variables('keyVaultName'))]",
                        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
                    ],
                    "properties": {
                        "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', toLower(variables('storageAccountName')),';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2019-06-01').keys[0].value, ';EndpointSuffix=',toLower(variables('storageSuffix')))]",
                        "contentType": "string",
                        "attributes": {
                            "enabled": true
                        }
                    }
                },
                {
                    "type": "secrets",
                    "apiVersion": "2016-10-01",
                    "name": "API-Key",
                    "dependsOn": [
                        "[resourceId('Microsoft.KeyVault/vaults/', variables('keyVaultName'))]"
                    ],
                    "properties": {
                        "value": "[parameters('apiToken')]",
                        "contentType": "string",
                        "attributes": {
                            "enabled": true
                        }
                    }
                }
            ]
        },
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2020-04-01-preview",
            "name": "[variables('uniqueRoleGuidKeyVaultSecretReader')]",
            "scope": "[concat('Microsoft.KeyVault/vaults', '/', variables('keyVaultName'))]",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults/', variables('keyVaultName'))]",
                "[resourceId('Microsoft.Web/sites/', parameters('functionName'))]"
            ],
            "properties": {
                "roleDefinitionId": "[variables('keyVaultSecretReader')]",
                "principalId": "[reference(resourceId('Microsoft.Web/sites', parameters('functionName')), '2019-08-01', 'full').identity.principalId]"
            }
        },
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2020-04-01-preview",
            "name": "[variables('uniqueRoleGuidMetricsPublisher')]",
            "scope": "[concat('Microsoft.Insights/dataCollectionRules', '/', '1Password')]",
            "properties": {
                "roleDefinitionId": "[variables('metricsPublisher')]",
                "principalId": "[reference(resourceId('Microsoft.Web/sites', parameters('functionName')), '2019-08-01', 'full').identity.principalId]"
            }
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2018-02-01",
            "name": "[parameters('functionName')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Y1",
                "tier": "Dynamic"
            },
            "kind": "functionapp",
            "properties": {
                "name": "[parameters('functionName')]",
                "workerSize": "0",
                "workerSizeId": "0",
                "numberOfWorkers": "1"
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2021-03-01",
            "name": "[parameters('functionName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
                "[resourceId('Microsoft.Web/serverfarms', parameters('functionName'))]",
                "[resourceId('Microsoft.Insights/components', parameters('functionName'))]"
            ],
            "kind": "functionapp",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "name": "[parameters('functionName')]",
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('functionName'))]",
                "httpsOnly": true,
                "clientAffinityEnabled": true,
                "alwaysOn": true,
                "siteConfig": {
                    "powerShellVersion": "7.2"
                }
            }
        },
        {
            "type": "Microsoft.Web/sites/config",
            "apiVersion": "2021-03-01",
            "name": "[concat(parameters('functionName'), '/appsettings')]",
            "kind": "string",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites/', parameters('functionName'))]",
                "[resourceId('Microsoft.KeyVault/vaults/', variables('keyVaultName'))]",
                "[resourceId('Microsoft.KeyVault/vaults/secrets', variables('keyVaultName'), 'AzureWebJobsStorage')]",
                "[extensionResourceId(resourceId('Microsoft.KeyVault/vaults/', variables('keyVaultName')), 'Microsoft.Authorization/roleAssignments/', variables('uniqueRoleGuidKeyVaultSecretReader'))]"
            ],
            "properties": {
                "APPINSIGHTS_INSTRUMENTATIONKEY": "[reference(resourceId('Microsoft.insights/components', parameters('functionName')), '2015-05-01').InstrumentationKey]",
                "APPLICATIONINSIGHTS_CONNECTION_STRING": "[reference(resourceId('Microsoft.insights/components', parameters('functionName')), '2015-05-01').ConnectionString]",
                "AzureWebJobsStorage": "[NF.secretName(variables('keyVaultName'), 'AzureWebJobsStorage')]",
                "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING": "[NF.secretName(variables('keyVaultName'), 'AzureWebJobsStorage')]",
                "WEBSITE_CONTENTSHARE": "[toLower(parameters('functionName'))]",
                "FUNCTIONS_EXTENSION_VERSION": "~4",
                "FUNCTIONS_WORKER_RUNTIME": "powershell",
                "FUNCTIONS_WORKER_RUNTIME_VERSION": "7.2",
                "schedule": "[parameters('functionSchedule')]",
                "apiEndpoint": "[parameters('apiEndpoint')]",
                "API-Key": "[NF.secretName(variables('keyVaultName'), 'API-Key')]",
                "dataCollectionEndpoint": "[parameters('dataCollectionEndpoint')]"
            }
        },
        {
            "name": "[concat(parameters('functionName'), '/ZipDeploy')]",
            "type": "Microsoft.Web/sites/extensions",
            "apiVersion": "2021-02-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "packageUri": "[parameters('packageUri')]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites/', parameters('functionName'))]"
            ]
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-06-01",
            "name": "[variables('storageAccountName')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "properties": {
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [
                    ],
                    "ipRules": [
                    ],
                    "defaultAction": "Allow"
                },
                "minimumTlsVersion": "TLS1_2",
                "allowBlobPublicAccess": false,
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "services": {
                        "file": {
                            "keyType": "Account",
                            "enabled": true
                        },
                        "blob": {
                            "keyType": "Account",
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2019-06-01",
            "name": "[concat(variables('storageAccountName'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
            ],
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "cors": {
                    "corsRules": [
                    ]
                },
                "deleteRetentionPolicy": {
                    "enabled": false
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/fileServices",
            "apiVersion": "2019-06-01",
            "name": "[concat(variables('storageAccountName'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
            ],
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "cors": {
                    "corsRules": [
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-06-01",
            "name": "[concat(variables('storageAccountName'), '/default/azure-webjobs-hosts')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storageAccountName'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-06-01",
            "name": "[concat(variables('storageAccountName'), '/default/azure-webjobs-secrets')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storageAccountName'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-06-01",
            "name": "[concat(variables('storageAccountName'), concat('/default/', variables('storageContainerName')))]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storageAccountName'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
            "apiVersion": "2019-06-01",
            "name": "[concat(variables('storageAccountName'), '/default/', tolower(variables('storageAccountName')))]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/fileServices', variables('storageAccountName'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
            ],
            "properties": {
                "shareQuota": 5120
            }
        }
    ],
    "functions": [
        {
            "namespace": "NF",
            "members": {
                "secretName": {
                    "parameters": [
                        {
                            "name": "VaultName",
                            "type": "string"
                        },
                        {
                            "name": "secretName",
                            "type": "string"
                        }
                    ],
                    "output": {
                        "type": "string",
                        "value": "[concat('@Microsoft.KeyVault(VaultName=', parameters('VaultName'), ';', 'SecretName=', parameters('secretName'), ')')]"
                    }
                }
            }
        }
    ],
    "outputs": {
        "functionAppName": {
            "type": "string",
            "value": "[parameters('functionName')]"
        },
        "storageAccountName": {
            "type": "string",
            "value": "[variables('storageAccountName')]"
        },
        "keyVaultName": {
            "type": "string",
            "value": "[variables('keyVaultName')]"
        }
    }
}
