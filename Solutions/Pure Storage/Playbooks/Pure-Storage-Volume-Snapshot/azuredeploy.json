{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "metadata": {
        "title": "",
        "description": "",
        "prerequisites": "",
    "postDeployment": [],
    "prerequisitesDeployTemplateFile": "",
    "lastUpdateTime": "",
"entities": [],
"tags": [],
"support": {
"tier": "community",
"armtemplate": "Generated from https://github.com/Azure/Azure-Sentinel/tree/master/Tools/Playbook-ARM-Template-Generator"
},
"author": {
"name": ""
}
},
"parameters": {
"PlaybookName": {
"defaultValue": "Pure-Storage-Volume-Snapshot",
"type": "string"
}
},
"variables": {
"Azuresentinel-1ConnectionName": "[concat('Azuresentinel-1-', parameters('PlaybookName'))]",
"KeyvaultConnectionName": "[concat('Keyvault-', parameters('PlaybookName'))]"
},
"resources": [
{
"properties": {
    "provisioningState": "Succeeded",
    "state": "Enabled",
    "definition": {
        "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
        "contentVersion": "1.0.0.0",
        "parameters": {
            "$connections": {
            "defaultValue": {},
            "type": "Object"
        }
    },
    "triggers": {
        "Microsoft_Sentinel_incident": {
            "type": "ApiConnectionWebhook",
            "inputs": {
                "body": {
                    "callback_url": "@{listCallbackUrl()}"
                },
                "host": {
                    "connection": {
                        "name": "@parameters('$connections')['azuresentinel-1']['connectionId']"
                    }
                },
                "path": "/incident-creation"
            }
        }
    },
    "actions": {
        "Entities_-_Get_IPs": {
        "runAfter": {},
        "type": "ApiConnection",
        "inputs": {
            "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
            "host": {
                "connection": {
                    "name": "@parameters('$connections')['azuresentinel-1']['connectionId']"
                }
            },
            "method": "post",
            "path": "/entities/ip"
        }
    },
    "IP_Loop": {
        "foreach": "@body('Entities_-_Get_IPs')?['IPs']",
        "actions": {
            "Fetching_API_version": {
                "runAfter": {
                    "Get_secret": [
                        "Succeeded"
                    ]
                },
                "type": "Http",
                "inputs": {
                    "method": "GET",
                    "uri": "https://@{items('IP_Loop')?['Address']}/api/api_version"
                },
                "runtimeConfiguration": {
                    "contentTransfer": {
                        "transferMode": "Chunked"
                    }
                }
            },
            "Get_Volumes_list": {
                "runAfter": {
                    "Retrieving_auth_token": [
                        "Succeeded"
                    ]
                },
                "type": "ApiConnection",
                "inputs": {
                    "host": {
                        "connection": {
                            "name": "@parameters('$connections')['keyvault']['connectionId']"
                        }
                    },
                    "method": "get",
                    "path": "/secrets/@{encodeURIComponent(concat(replace(items('IP_Loop')?['Address'], '.', '-'),'-volumes'))}/value"
                }
            },
            "Get_secret": {
                "type": "ApiConnection",
                "inputs": {
                    "host": {
                        "connection": {
                            "name": "@parameters('$connections')['keyvault']['connectionId']"
                        }
                    },
                    "method": "get",
                    "path": "/secrets/@{encodeURIComponent(replace(items('IP_Loop')?['Address'], '.', '-'))}/value"
                }
            },
            "Logout": {
                "runAfter": {
                    "Volume_snapshot": [
                        "Succeeded"
                    ]
                },
                "type": "Http",
                "inputs": {
                    "headers": {
                        "x-auth-token": "@{outputs('Retrieving_auth_token')?['headers']['x-auth-token']}"
                    },
                    "method": "POST",
                    "uri": "https://@{items('IP_Loop')?['Address']}/api/@{last(body('Fetching_API_version')?['version'])}/logout"
                },
                "runtimeConfiguration": {
                    "contentTransfer": {
                        "transferMode": "Chunked"
                    }
                }
            },
            "Retrieving_auth_token": {
                "runAfter": {
                    "Fetching_API_version": [
                        "Succeeded"
                    ]
                },
                "type": "Http",
                "inputs": {
                    "headers": {
                        "api-token": "@{body('Get_secret')?['value']}"
                    },
                    "method": "POST",
                    "uri": "https://@{items('IP_Loop')?['Address']}/api/@{last(body('Fetching_API_version')?['version'])}/login"
                },
                "runtimeConfiguration": {
                    "contentTransfer": {
                        "transferMode": "Chunked"
                    }
                }
            },
            "Volume_snapshot": {
                "runAfter": {
                    "Get_Volumes_list": [
                        "Succeeded"
                    ]
                },
                "type": "Http",
                "inputs": {
                    "headers": {
                        "x-auth-token": "@{outputs('Retrieving_auth_token')?['headers']['x-auth-token']}"
                    },
                    "method": "POST",
                    "queries": {
                        "source_names": "@{body('Get_Volumes_list')?['value']}"
                    },
                    "uri": "https://@{items('IP_Loop')?['Address']}/api/@{last(body('Fetching_API_version')?['version'])}/volume-snapshots"
                },
                "runtimeConfiguration": {
                    "contentTransfer": {
                        "transferMode": "Chunked"
                    }
                }
            }
        },
        "runAfter": {
            "Entities_-_Get_IPs": [
                "Succeeded"
            ]
        },
        "type": "Foreach"
    }
},
"outputs": {}
},
"parameters": {
"$connections": {
"value": {
    "azuresentinel-1": {
        "connectionId": "[resourceId('Microsoft.Web/connections', variables('Azuresentinel-1ConnectionName'))]",
        "connectionName": "[variables('Azuresentinel-1ConnectionName')]",
        "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Azuresentinel-1')]",
        "connectionProperties": {
            "authentication": {
                "type": "ManagedServiceIdentity"
            }
        }
    },
    "keyvault": {
        "connectionId": "[resourceId('Microsoft.Web/connections', variables('KeyvaultConnectionName'))]",
        "connectionName": "[variables('KeyvaultConnectionName')]",
        "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Keyvault')]",
        "connectionProperties": {
            "authentication": {
                "type": "ManagedServiceIdentity"
            }
        }
    }
}
}
}
},
"name": "[parameters('PlaybookName')]",
"type": "Microsoft.Logic/workflows",
"location": "[resourceGroup().location]",
"tags": {
"hidden-SentinelTemplateName": "Pure-Storage-Volume-Snapshot",
"hidden-SentinelTemplateVersion": "1.0"
},
"identity": {
"type": "SystemAssigned"
},
"apiVersion": "2017-07-01",
"dependsOn": [
"[resourceId('Microsoft.Web/connections', variables('Azuresentinel-1ConnectionName'))]",
"[resourceId('Microsoft.Web/connections', variables('KeyvaultConnectionName'))]"
]
},
{
"type": "Microsoft.Web/connections",
"apiVersion": "2016-06-01",
"name": "[variables('Azuresentinel-1ConnectionName')]",
"location": "[resourceGroup().location]",
"kind": "V1",
"properties": {
"displayName": "[variables('Azuresentinel-1ConnectionName')]",
"customParameterValues": {},
"parameterValueType": "Alternative",
"api": {
"id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Azuresentinel-1')]"
}
}
},
{
"type": "Microsoft.Web/connections",
"apiVersion": "2016-06-01",
"name": "[variables('KeyvaultConnectionName')]",
"location": "[resourceGroup().location]",
"kind": "V1",
"properties": {
"displayName": "[variables('KeyvaultConnectionName')]",
"customParameterValues": {},
"parameterValueType": "Alternative",
"api": {
"id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Keyvault')]"
}
}
}
]
}
