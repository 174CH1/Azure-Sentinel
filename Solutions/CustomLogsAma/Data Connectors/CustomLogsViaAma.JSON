{
  "id": "CustomLogsAma",
  "title": "Custom logs via AMA",
  "publisher": "Microsoft",
  "descriptionMarkdown": "Many applications log information to text or JSON files instead of standard logging services, such as Windows Event logs, Syslog or CEF. The Custom Logs data connector allows you to collect events from files on both Windows and Linux computers and stream them to custom logs tables you created. While streaming the data you can parse and transform the contents using the DCR. After collecting the data, you can apply analytic rules, hunting, searching, threat intelligence, enrichments and more.\n\n**NOTE: Use this connector for the following devices:** Cisco Meraki, Zscaler Private Access (ZPA), VMware vCenter, Apache HTTP server, Apache Tomcat, Jboss Enterprise application platform, Juniper IDP, MarkLogic Audit, MongoDB Audit, Nginx HTTP server, Oracle Weblogic server, PostgreSQL Events, Squid Proxy, Ubiquiti UniFi, SecurityBridge Threat detection SAP and AI vectra stream.",
  "graphQueries": [
    {
      "metricName": "JBossEvent",
      "legend": "JBossEvent_CL",
      "baseQuery": "JBossEvent_CL\n| where SourceSystem == \"AMA\""
    },
    {
      "metricName": "JuniperIDP",
      "legend": "JuniperIDP_CL",
      "baseQuery": "JuniperIDP_CL\n| where SourceSystem == \"AMA\""
    },
    {
      "metricName": "ApacheHTTPServer",
      "legend": "ApacheHTTPServer_CL",
      "baseQuery": "ApacheHTTPServer_CL\n| where SourceSystem == \"AMA\""
    },
    {
      "metricName": "Tomcat",
      "legend": "Tomcat_CL",
      "baseQuery": "Tomcat_CL\n| where SourceSystem == \"AMA\""
    },
    {
      "metricName": "meraki",
      "legend": "meraki_CL",
      "baseQuery": "meraki_CL\n| where SourceSystem == \"AMA\""
    },
    {
      "metricName": "VectraStream",
      "legend": "VectraStream_CL",
      "baseQuery": "VectraStream_CL\n| where SourceSystem == \"AMA\""
    },
    {
      "metricName": "MarkLogicAudit",
      "legend": "MarkLogicAudit_CL",
      "baseQuery": "MarkLogicAudit_CL\n| where SourceSystem == \"AMA\""
    },
    {
      "metricName": "MongoDBAudit",
      "legend": "MongoDBAudit_CL",
      "baseQuery": "MongoDBAudit_CL\n| where SourceSystem == \"AMA\""
    },
    {
      "metricName": "NGINX",
      "legend": "NGINX_CL",
      "baseQuery": "NGINX_CL\n| where SourceSystem == \"AMA\""
    },
    {
      "metricName": "OracleWebLogicServer",
      "legend": "OracleWebLogicServer_CL",
      "baseQuery": "OracleWebLogicServer_CL\n| where SourceSystem == \"AMA\""
    },
    {
      "metricName": "PostgreSQL",
      "legend": "PostgreSQL_CL",
      "baseQuery": "PostgreSQL_CL\n| where SourceSystem == \"AMA\""
    },
    {
      "metricName": "SquidProxy",
      "legend": "SquidProxy_CL",
      "baseQuery": "SquidProxy_CL\n| where SourceSystem == \"AMA\""
    },
    {
      "metricName": "Ubiquiti",
      "legend": "Ubiquiti_CL",
      "baseQuery": "Ubiquiti_CL\n| where SourceSystem == \"AMA\""
    },
    {
      "metricName": "vcenter",
      "legend": "vcenter_CL",
      "baseQuery": "vcenter_CL\n| where SourceSystem == \"AMA\""
    },
    {
      "metricName": "ZPA",
      "legend": "ZPA_CL",
      "baseQuery": "ZPA_CL\n| where SourceSystem == \"AMA\""
    },
    {
      "metricName": "SecurityBridgeLogs",
      "legend": "SecurityBridgeLogs_CL",
      "baseQuery": "SecurityBridgeLogs_CL\n| where SourceSystem == \"AMA\""
    }
  ],
  "sampleQueries": [
    {
      "description": "All JBossEvent logs",
      "query": "JBossEvent_CL\n| where SourceSystem == \"AMA\"\n| sort by TimeGenerated"
    },
    {
      "description": "All JuniperIDP logs",
      "query": "JuniperIDP_CL\n| where SourceSystem == \"AMA\"\n| sort by TimeGenerated"
    },
    {
      "description": "All ApacheHTTPServer logs",
      "query": "ApacheHTTPServer_CL\n| where SourceSystem == \"AMA\"\n| sort by TimeGenerated"
    },
    {
      "description": "All Tomcat logs",
      "query": "Tomcat_CL\n| where SourceSystem == \"AMA\"\n| sort by TimeGenerated"
    },
    {
      "description": "All meraki logs",
      "query": "meraki_CL\n| where SourceSystem == \"AMA\"\n| sort by TimeGenerated"
    },
    {
      "description": "All VectraStream logs",
      "query": "VectraStream_CL\n| where SourceSystem == \"AMA\"\n| sort by TimeGenerated"
    },
    {
      "description": "All MarkLogicAudit logs",
      "query": "MarkLogicAudit_CL\n| where SourceSystem == \"AMA\"\n| sort by TimeGenerated"
    },
    {
      "description": "All MongoDBAudit logs",
      "query": "MongoDBAudit_CL\n| where SourceSystem == \"AMA\"\n| sort by TimeGenerated"
    },
    {
      "description": "All NGINX logs",
      "query": "NGINX_CL\n| where SourceSystem == \"AMA\"\n| sort by TimeGenerated"
    },
    {
      "description": "All OracleWebLogicServer logs",
      "query": "OracleWebLogicServer_CL\n| where SourceSystem == \"AMA\"\n| sort by TimeGenerated"
    },
    {
      "description": "All PostgreSQL logs",
      "query": "PostgreSQL_CL\n| where SourceSystem == \"AMA\"\n| sort by TimeGenerated"
    },
    {
      "description": "All SquidProxy logs",
      "query": "SquidProxy_CL\n| where SourceSystem == \"AMA\"\n| sort by TimeGenerated"
    },
    {
      "description": "All Ubiquiti logs",
      "query": "Ubiquiti_CL\n| where SourceSystem == \"AMA\"\n| sort by TimeGenerated"
    },
    {
      "description": "All vcenter logs",
      "query": "vcenter_CL\n| where SourceSystem == \"AMA\"\n| sort by TimeGenerated"
    },
    {
      "description": "All ZPA logs",
      "query": "ZPA_CL\n| where SourceSystem == \"AMA\"\n| sort by TimeGenerated"
    },
    {
      "description": "All SecurityBridgeLogs logs",
      "query": "SecurityBridgeLogs_CL\n| where SourceSystem == \"AMA\"\n| sort by TimeGenerated"
    }
  ],
  "connectivityCriterias": [
    {
      "type": "IsConnectedQuery",
      "value": [
        "JBossEvent_CL\n| where SourceSystem == \"AMA\"\n| summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)",
        "JuniperIDP_CL\n| where SourceSystem == \"AMA\"\n| summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)",
        "ApacheHTTPServer_CL\n| where SourceSystem == \"AMA\"\n| summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)",
        "Tomcat_CL\n| where SourceSystem == \"AMA\"\n| summarize LastLogReceived = max(TimeGenerated)\n| project IsConnected = LastLogReceived > ago(7d)",
        "meraki_CL\n| where SourceSystem == \"AMA\"\n| summarize LastLogReceived = max(TimeGenerated)\n| project IsConnected = LastLogReceived > ago(7d)",
        "VectraStream_CL\n| where SourceSystem == \"AMA\"\n| summarize LastLogReceived = max(TimeGenerated)\n| project IsConnected = LastLogReceived > ago(7d)",
        "MarkLogicAudit_CL\n| where SourceSystem == \"AMA\"\n| summarize LastLogReceived = max(TimeGenerated)\n| project IsConnected = LastLogReceived > ago(7d)",
        "MongoDBAudit_CL\n| where SourceSystem == \"AMA\"\n| summarize LastLogReceived = max(TimeGenerated)\n| project IsConnected = LastLogReceived > ago(7d)",
        "NGINX_CL\n| where SourceSystem == \"AMA\"\n| summarize LastLogReceived = max(TimeGenerated)\n| project IsConnected = LastLogReceived > ago(7d)",
        "OracleWebLogicServer_CL\n| where SourceSystem == \"AMA\"\n| summarize LastLogReceived = max(TimeGenerated)\n| project IsConnected = LastLogReceived > ago(7d)",
        "PostgreSQL_CL\n| where SourceSystem == \"AMA\"\n| summarize LastLogReceived = max(TimeGenerated)\n| project IsConnected = LastLogReceived > ago(7d)",
        "SquidProxy_CL\n| where SourceSystem == \"AMA\"\n| summarize LastLogReceived = max(TimeGenerated)\n| project IsConnected = LastLogReceived > ago(7d)",
        "Ubiquiti_CL\n| where SourceSystem == \"AMA\"\n| summarize LastLogReceived = max(TimeGenerated)\n| project IsConnected = LastLogReceived > ago(7d)",
        "vcenter_CL\n| where SourceSystem == \"AMA\"\n| summarize LastLogReceived = max(TimeGenerated)\n| project IsConnected = LastLogReceived > ago(7d)",
        "ZPA_CL\n| where SourceSystem == \"AMA\"\n| summarize LastLogReceived = max(TimeGenerated)\n| project IsConnected = LastLogReceived > ago(7d)",
        "SecurityBridgeLogs_CL\n| where SourceSystem == \"AMA\"\n| summarize LastLogReceived = max(TimeGenerated)\n| project IsConnected = LastLogReceived > ago(7d)"
      ]
    }
  ],
  "dataTypes": [
    {
      "name": "JBossEvent_CL",
      "lastDataReceivedQuery": "JBossEvent_CL\n| where SourceSystem == \"AMA\"\n | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
    },
    {
      "name": "JuniperIDP_CL",
      "lastDataReceivedQuery": "JuniperIDP_CL\n| where SourceSystem == \"AMA\"\n | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
    },
    {
      "name": "ApacheHTTPServer_CL",
      "lastDataReceivedQuery": "ApacheHTTPServer_CL\n| where SourceSystem == \"AMA\"\n | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
    },
    {
      "name": "Tomcat_CL",
      "lastDataReceivedQuery": "Tomcat_CL\n| where SourceSystem == \"AMA\"\n | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
    },
    {
      "name": "meraki_CL",
      "lastDataReceivedQuery": "meraki_CL\n| where SourceSystem == \"AMA\"\n | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
    },
    {
      "name": "VectraStream_CL",
      "lastDataReceivedQuery": "VectraStream_CL\n| where SourceSystem == \"AMA\"\n | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
    },
    {
      "name": "MarkLogicAudit_CL",
      "lastDataReceivedQuery": "MarkLogicAudit_CL\n| where SourceSystem == \"AMA\"\n | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
    },
    {
      "name": "MongoDBAudit_CL",
      "lastDataReceivedQuery": "MongoDBAudit_CL\n| where SourceSystem == \"AMA\"\n | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
    },
    {
      "name": "NGINX_CL",
      "lastDataReceivedQuery": "NGINX_CL\n| where SourceSystem == \"AMA\"\n | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
    },
    {
      "name": "OracleWebLogicServer_CL",
      "lastDataReceivedQuery": "OracleWebLogicServer_CL\n| where SourceSystem == \"AMA\"\n | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
    },
    {
      "name": "PostgreSQL_CL",
      "lastDataReceivedQuery": "PostgreSQL_CL\n| where SourceSystem == \"AMA\"\n | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
    },
    {
      "name": "SquidProxy_CL",
      "lastDataReceivedQuery": "SquidProxy_CL\n| where SourceSystem == \"AMA\"\n | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
    },
    {
      "name": "Ubiquiti_CL",
      "lastDataReceivedQuery": "Ubiquiti_CL\n| where SourceSystem == \"AMA\"\n | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
    },
    {
      "name": "vcenter_CL",
      "lastDataReceivedQuery": "vcenter_CL\n| where SourceSystem == \"AMA\"\n | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
    },
    {
      "name": "ZPA_CL",
      "lastDataReceivedQuery": "ZPA_CL\n| where SourceSystem == \"AMA\"\n | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
    },
    {
      "name": "SecurityBridgeLogs_CL",
      "lastDataReceivedQuery": "SecurityBridgeLogs_CL\n| where SourceSystem == \"AMA\"\n | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
    }
  ],
  "availability": {
    "status": 2,
    "isPreview": true
  },
  "permissions": {
    "resourceProvider": [
      {
        "provider": "Microsoft.OperationalInsights/workspaces/datasources",
        "permissionsDisplayText": "read and write permissions.",
        "providerDisplayName": "Workspace data sources",
        "scope": "Workspace",
        "requiredPermissions": {
          "read": true,
          "write": true
        }
      }
    ],
    "customs": [
      {
        "name": "permissions",
        "description": "To collect data from non-Azure VMs, they must have Azure Arc installed and enabled. [Learn more](https://docs.microsoft.com/azure/azure-monitor/agents/azure-monitor-agent-install?tabs=ARMAgentPowerShell,PowerShellWindows,PowerShellWindowsArc,CLIWindows,CLIWindowsArc)"
      }
    ]
  },
  "instructionSteps": [
    {
      "title": "Enable data collection rule",
      "description": "> Custom logs are collected from both Windows and Linux agents.",
      "instructions": [
        {
          "type": "CustomLogsAMA_test",
          "parameters": {}
        },
        {
          "parameters": {
            "linkType": "OpenCreateDataCollectionRule",
            "dataCollectionRuleType": 8
          },
          "type": "InstallAgent"
        }
      ]
    }
  ]
}