Parser:
  Title: File Event Parser for SentinelOne
  Version: '0.1.1'
  LastUpdated: July 24, 2023
Product:
  Name: SentinelOne
Normalization:
  Schema: FileEvent
  Version: '0.2.1'
References:
- Title: ASIM File Event Schema
  Link: https://aka.ms/ASimFileEventDoc
- Title: ASIM
  Link: https://aka.ms/AboutASIM
- Title: SentinelOne Documentation
- Link: https://<SOneInstanceDomain>.sentinelone.net/api-doc/overview
Description: |
  This ASIM parser supports normalizing SentinelOne logs to the ASIM File Event normalized schema. SentinelOne events are captured through SentinelOne data connector which ingests SentinelOne server objects such as Threats, Agents, Applications, Activities, Policies, Groups, and more events into Microsoft Sentinel through the REST API.
ParserName: vimFileEventSentinlOne
EquivalentBuiltInParser: _Im_FileEvent_SentinelOne
ParserQuery: |
  let ASIM_GetWindowsFilenamePart = (path: string) { tostring(split(path, @'\')[-1]) };
  let ASIM_GetLinuxFilenamePart = (path: string) { tostring(split(path, @'/')[-1]) };
  let EventTypeLookup = datatable (alertInfo_eventType_s: string, EventType: string)
      [
      "FILECREATION", "FileCreated",
      "FILEMODIFICATION", "FileModified",
      "FILEDELETION", "FileDeleted",
      "FILERENAME", "FileRenamed"
  ];
  let parser = () {
      let allFileData = SentinelOne_CL
          | where event_name_s == "Alerts."
              and alertInfo_eventType_s in ('FILECREATION', 'FILEMODIFICATION', 'FILEDELETION', 'FILERENAME');
      let windowsFileData = allFileData
          | where agentDetectionInfo_osFamily_s == "windows"
          | extend
              TargetFilePathType = "Windows Local",
              TargetFileName = ASIM_GetWindowsFilenamePart(targetProcessInfo_tgtFilePath_s),
              SrcFileName = ASIM_GetWindowsFilenamePart(targetProcessInfo_tgtFileOldPath_s);
      let otherFileData = allFileData
          | where agentDetectionInfo_osFamily_s != "windows"
          | extend
              TargetFilePathType = "Unix",
              TargetFileName = ASIM_GetLinuxFilenamePart(targetProcessInfo_tgtFilePath_s),
              SrcFileName = ASIM_GetLinuxFilenamePart(targetProcessInfo_tgtFileOldPath_s);
      union windowsFileData, otherFileData
      | lookup EventTypeLookup on alertInfo_eventType_s
      | extend
          EventSeverity = iff(ruleInfo_severity_s == "Critical", "High", ruleInfo_severity_s),
          EventVendor = "SentinelOne",
          EventProduct = "SentinelOne",
          EventResult = "Success",
          EventSchema = "FileEvent",
          EventSchemaVersion = "0.2.1",
          ActorUsername = coalesce(sourceProcessInfo_user_s, "N/A")
      | project-rename
          EventStartTime = sourceProcessInfo_pidStarttime_t,
          EventOriginalSeverity = ruleInfo_severity_s,
          EventUid = _ResourceId,
          ActingProcessCommandLine = sourceProcessInfo_commandline_s,
          ActingProcessGuid = sourceProcessInfo_uniqueId_g,
          ActingProcessId = sourceProcessInfo_pid_s,
          ActingProcessName = sourceProcessInfo_name_s,
          DvcId = agentDetectionInfo_uuid_g,
          DvcOs = agentDetectionInfo_osName_s,
          DvcOsVersion = agentDetectionInfo_osRevision_s,
          EventOriginalType = alertInfo_eventType_s,
          EventOriginalUid = alertInfo_dvEventId_s,
          RuleName = ruleInfo_name_s,
          TargetFileCreationTime = targetProcessInfo_tgtFileCreatedAt_t,
          SrcFilePath = targetProcessInfo_tgtFileOldPath_s,
          TargetFilePath = targetProcessInfo_tgtFilePath_s,
          TargetFileSHA1 = targetProcessInfo_tgtFileHashSha1_s,
          TargetFileSHA256 = targetProcessInfo_tgtFileHashSha256_s
      | invoke _ASIM_ResolveDvcFQDN('agentDetectionInfo_name_s')
      | extend
          Dvc = coalesce(DvcHostname, DvcId, EventProduct),
          EventEndTime = EventStartTime,
          Rule = RuleName,
          FileName = TargetFileName,
          FilePath = TargetFilePath,
          Process = ActingProcessName,
          User = ActorUsername,
          Hash = coalesce(TargetFileSHA256, TargetFileSHA1)
      | extend
          ActorUsernameType = _ASIM_GetUsernameType(ActorUsername),
          DvcIdType = iff(isnotempty(DvcId), "Other", ""),
          HashType = case(
                isnotempty(Hash) and isnotempty(TargetFileSHA256),
                "SHA256",
                isnotempty(Hash) and isnotempty(TargetFileSHA1),
                "SHA1",
                ""
            ) 
      | project-away 
          *_d,
          *_s,
          *_g,
          *_t,
          *_b,
          Computer,
          MG,
          ManagementGroupName,
          RawData,
          SourceSystem,
          TenantId
  };
  parser()