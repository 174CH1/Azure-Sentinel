Parser:
  Title: Network Session ASIM filtering parser for SentinelOne
  Version: '0.1.1'
  LastUpdated: Jul 27 2023
Product:
  Name: SentinelOne
Normalization:
  Schema: NetworkSession
  Version: '0.2.6'
References:
- Title: ASIM Network Session Schema
  Link: https://aka.ms/ASimNetworkSessionDoc
- Title: ASIM
  Link: https:/aka.ms/AboutASIM
- Title: SentinelOne Documentation
- Link: https://<SOneInstanceDomain>.sentinelone.net/api-doc/overview
Description: |
  This ASIM parser supports normalizing SentinelOne logs to the ASIM Network Session normalized schema. SentinelOne events are captured through SentinelOne data connector which ingests SentinelOne server objects such as Threats, Agents, Applications, Activities, Policies, Groups, and more events into Microsoft Sentinel through the REST API.
ParserName: ASimNetworkSessionSentinelOne
EquivalentBuiltInParser: _Im_NetworkSession_SentinelOne
ParserParams:
  - Name: disabled
    Type: bool
    Default: false
ParserQuery: |
  let NetworkDirectionLookup = datatable (
      alertInfo_netEventDirection_s: string, 
      NetworkDirection: string
  )[
      "OUTGOING", "Outbound",
      "INCOMING", "Inbound",
  ];
  let parser = (disabled: bool=false) {
      SentinelOne_CL
      | where not(disabled) 
          and event_name_s == "Alerts." 
          and alertInfo_eventType_s == "TCPV4"
      | lookup NetworkDirectionLookup on alertInfo_netEventDirection_s
      | extend 
          DstPortNumber = toint(alertInfo_dstPort_s),
          SrcPortNumber = toint(alertInfo_srcPort_s),
          AdditionalFields = bag_pack(
                        "MachineType",
                        agentDetectionInfo_machineType_s,
                        "OsRevision",
                        agentDetectionInfo_osRevision_s
                    )
      | project-rename
          EventStartTime = sourceProcessInfo_pidStarttime_t,
          DstIpAddr = alertInfo_dstIp_s,
          DvcHostname = agentDetectionInfo_name_s,
          EventUid = _ResourceId,
          SrcIpAddr = alertInfo_srcIp_s,
          DvcId = agentDetectionInfo_uuid_g,
          DvcOs = agentDetectionInfo_osName_s,
          DvcOsVersion = agentDetectionInfo_version_s,
          EventOriginalSeverity = ruleInfo_severity_s,
          EventOriginalUid = alertInfo_dvEventId_s,
          SrcProcessName = sourceProcessInfo_name_s,
          SrcProcessId = sourceProcessInfo_pid_s,
          SrcUsername = sourceProcessInfo_user_s
      | extend
          EventEndTime = EventStartTime,
          Dst = DstIpAddr,
          DvcIpAddr = SrcIpAddr,
          Src = SrcIpAddr,
          SrcHostname = DvcHostname,
          SrcDvcId = DvcId,
          IpAddr = SrcIpAddr,
          EventSeverity = iff(EventOriginalSeverity == "Critical", "High", EventOriginalSeverity),
          SrcDvcIdType = iff(isnotempty(DvcId), "Other", ""),
          DvcIdType = iff(isnotempty(DvcId), "Other", ""),
          SrcUsernameType = _ASIM_GetUsernameType(SrcUsername)
      | extend
          Dvc = coalesce(DvcId, DvcHostname, DvcIpAddr)
      | extend
          EventCount = int(1),
          EventProduct = "SentinelOne",
          EventResult = "Success",
          EventSchema = "NetworkSession",
          EventSchemaVersion = "0.2.6",
          EventResultDetails = "Unknown",
          EventType = "EndpointNetworkSession",
          EventVendor = "SentinelOne",
          NetworkProtocol = "TCP",
          NetworkProtocolVersion = "IPv4"
      | project-away
          *_d,
          *_s,
          *_g,
          *_t,
          *_b,
          TenantId,
          RawData,
          Computer,
          MG,
          ManagementGroupName,
          SourceSystem
  };
  parser(disabled = disabled)