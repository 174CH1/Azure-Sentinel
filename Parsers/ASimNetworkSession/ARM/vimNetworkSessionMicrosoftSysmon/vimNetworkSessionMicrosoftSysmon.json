{
  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "Workspace": {
      "type": "string",
      "metadata": {
        "description": "The Microsoft Sentinel workspace into which the function will be deployed. Has to be in the selected Resource Group."
      }
    },
    "WorkspaceRegion": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "The region of the selected workspace. The default value will use the Region selection above."
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2017-03-15-preview",
      "name": "[parameters('Workspace')]",
      "location": "[parameters('WorkspaceRegion')]",
      "resources": [
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "ASimNetworkSessionMicrosoftSysmon",
          "dependsOn": [
            "[concat('Microsoft.OperationalInsights/workspaces/', parameters('Workspace'))]"
          ],
          "properties": {
            "etag": "*",
            "displayName": "Network Session Event ASIM parser for Sysmon (Event 3)",
            "category": "ASIM",
            "FunctionAlias": "ASimNetworkSessionMicrosoftSysmon",
            "query": "let src_or_any=set_union(srcipaddr_has_any_prefix, ipaddr_has_any_prefix); \nlet dst_or_any=set_union(dstipaddr_has_any_prefix, ipaddr_has_any_prefix); \nlet ip_any = set_union(srcipaddr_has_any_prefix, dstipaddr_has_any_prefix, ipaddr_has_any_prefix);   \nlet parser = (\n    starttime:datetime=datetime(null), \n    endtime:datetime=datetime(null), \n    srcipaddr_has_any_prefix:dynamic=dynamic([]), \n    dstipaddr_has_any_prefix:dynamic=dynamic([]), \n    ipaddr_has_any_prefix:dynamic=dynamic([]),\n    dstportnumber:int=int(null), \n    hostname_has_any:dynamic=dynamic([]), \n    dvcaction:dynamic=dynamic([]), \n    eventresult:string='*', \n    disabled:bool=false\n    )\n    {\n    let Sysmon3_Event=Event\n    | where (isnull(starttime) or TimeGenerated >= starttime) and  (isnull(endtime) or TimeGenerated <= endtime)\n    | where not(disabled)\n\n    }\n    parser (starttime, endtime, srcipaddr_has_any_prefix, dstipaddr_has_any_prefix, ipaddr_has_any_prefix,dstportnumber, hostname_has_any, dvcaction, eventresult, disabled)\n",
            "version": 1,
            "functionParameters": "disabled:bool=False"
          }
        }
      ]
    }
  ]
}