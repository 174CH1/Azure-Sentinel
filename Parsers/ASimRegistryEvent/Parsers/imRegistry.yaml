Parser:
  Title: Registry Event ASIM Parser
  Version: '0.1.1'
  LastUpdated: June 04, 2022
Product:
  Name: Source Agnostic
Normalization:
  Schema: RegistryEvent
  Version: '0.1.2'
References:
- Title: ASIM Registry Schema
  Link: https://aka.ms/ASimRegistryEventDoc
- Title: ASIM
  Link: https:/aka.ms/AboutASIM
Description: |
  This ASIM parser supports normalizing Registry Event logs from all supported sources to the ASIM Registry Event normalized schema.
ParserName: imRegistry
EquivalentBuiltInParser: _Im_RegistryEvent 
ParserParams:
  - Name: starttime
    Type: datetime
    Default: datetime(null)
  - Name: endtime
    Type: datetime
    Default: datetime(null)
  - Name: eventtype_in
    Type: dynamic
    Default: dynamic([])
  - Name: actorusername_has_any
    Type: dynamic
    Default: dynamic([])
  - Name: registrykey_has_any
    Type: dynamic
    Default: dynamic([])
  - Name: registryvalue_has_any
    Type: dynamic
    Default: dynamic([])
  - Name: registryvaluedata_has_any
    Type: dynamic
    Default: dynamic([])
  - Name: dvchostname_has_any
    Type: dynamic
    Default: dynamic([])
Parsers:
  - _Im_RegistryEvent_Empty
  # - _Im_RegistryEvent_MicrosoftSecurityEvents // Deprecated
  - _Im_RegistryEvent_Microsoft365D
  - _Im_RegistryEvent_MicrosoftSysmon
  - _Im_RegistryEvent_MicrosoftWindowsEvent
  - _Im_RegistryEvent_SentinelOne
  - _Im_RegistryEvent_TrendMicroVisionOne
ParserQuery: |
  let Generic=(starttime: datetime=datetime(null), endtime: datetime=datetime(null), eventtype_in: dynamic=dynamic([]), actorusername_has_any: dynamic=dynamic([]), registrykey_has_any: dynamic=dynamic([]), registryvalue_has_any: dynamic=dynamic([]), registryvaluedata_has_any: dynamic=dynamic([]), dvchostname_has_any: dynamic=dynamic([])) {
    let DisabledParsers=materialize(_GetWatchlist('ASimDisabledParsers') | where SearchKey in ('Any', 'ExcludeimRegistry') | extend SourceSpecificParser=column_ifexists('SourceSpecificParser','') | distinct SourceSpecificParser);
    let imRegistryDisabled=toscalar('ExcludeimRegistry' in (DisabledParsers) or 'Any' in (DisabledParsers)); 
    union isfuzzy=true
      vimRegistryEventEmpty,
      vimRegistryEventMicrosoft365D,
      vimRegistryEventMicrosoftSysmon,
      // vimRegistryEventMicrosoftSecurityEvents, // Deprecated, now included in vimRegistryEventMicrosoftWindowsEvent. 
      vimRegistryEventMicrosoftWindowsEvent,
      vimRegistryEventSentinelOne,
      vimRegistryEventTrendMicroVisionOne (starttime, endtime, eventtype_in, actorusername_has_any, registrykey_has_any, registryvalue_has_any, registryvaluedata_has_any, dvchostname_has_any, (imRegistryDisabled or('ExcludevimRegistryEventTrendMicroVisionOne' in (DisabledParsers) )))
  };
  Generic(starttime, endtime, eventtype_in, actorusername_has_any, registrykey_has_any, registryvalue_has_any, registryvaluedata_has_any, dvchostname_has_any)