Parser:
  Title: Authentication ASIM parser for Palo Alto Cortex Data Lake
  Version: '0.1.0'
  LastUpdated: Sep 29 2023
Product:
  Name: Palo Alto Cortex Data Lake
Normalization:
  Schema: Authentication
  Version: '0.2.6'
References:
- Title: ASIM Authentication Schema
  Link: https://aka.ms/ASimAuthenticationDoc
- Title: ASIM
  Link: https:/aka.ms/AboutASIM
- Title: Palo Alto Cortex Data Lake Documentation
  Link: https://docs.paloaltonetworks.com/cortex/cortex-data-lake/log-forwarding-schema-reference/network-logs/network-authentication-log/network-auth-cef-fields
Description: |
  This ASIM parser supports normalizing Palo Alto Cortex Data Lake logs to the ASIM Authentication normalized schema. These events are captured through the Palo Alto Networks CDL data connector that ingests CDL logs into Microsoft Sentinel.
ParserName: ASimAuthenticationPaloAltoCortexDataLake
EquivalentBuiltInParser: _ASim_Authentication_PaloAltoCortexDataLake
ParserParams:
  - Name: disabled
    Type: bool
    Default: false
ParserQuery: |
  let EventSeverityLookup = datatable (LogSeverity: string, EventSeverity: string)
  [
      "0", "Low",
      "1", "Low",
      "2", "Low",
      "3", "Low",
      "4", "Medium",
      "5", "Medium",
      "6", "Medium",
      "7", "High",
      "8", "High",
      "9", "High",
      "10", "High"
  ];
  let parser = (disabled: bool=false) {
      CommonSecurityLog
      | where not(disabled)
          and DeviceVendor == "Palo Alto Networks" and DeviceProduct == "LF"
          and DeviceEventClassID == "AUTH"
      | parse-kv AdditionalExtensions as (PanOSSourceDeviceHost:string, PanOSSourceDeviceOSFamily:string, PanOSAuthenticationProtocol: string, PanOSAuthenticatedUserDomain: string, PanOSAuthenticatedUserName:string, PanOSAuthenticatedUserUUID:string, start:string) with (pair_delimiter=";", kv_delimiter="=")
      | invoke _ASIM_ResolveDvcFQDN('DeviceName')
      | invoke _ASIM_ResolveSrcFQDN('PanOSSourceDeviceHost')
      | lookup EventSeverityLookup on LogSeverity
      | extend
          EventStartTime = todatetime(start),
          SrcIpAddr = coalesce(SourceIP,DeviceCustomIPv6Address2),
          TargetIpAddr = coalesce(DestinationIP,DeviceCustomIPv6Address3),
          EventMessage = Message
      | project-rename
          EventProduct = DeviceProduct,
          EventVendor = DeviceVendor,
          DvcIpAddr = Computer,
          EventUid = _ItemId,
          DvcId = DeviceExternalID,
          EventOriginalResultDetails = Message,
          EventOriginalSeverity = LogSeverity,
          EventOriginalType = DeviceEventClassID,
          EventOriginalUid = ExtID,
          EventProductVersion = DeviceVersion,
          LogonProtocol = PanOSAuthenticationProtocol,
          SrcDvcOs = PanOSSourceDeviceOSFamily,
          TargetUsername = PanOSAuthenticatedUserName,
          TargetUserId = PanOSAuthenticatedUserUUID,
          TargetDomain = PanOSAuthenticatedUserDomain
      | extend
          Dvc = coalesce(DvcId, DvcHostname, DvcIpAddr),
          EventEndTime = EventStartTime,
          EventResult = iff(EventMessage has "Invalid Certificate", "Failure", "Success"),
          Dst = TargetIpAddr,
          Src = coalesce(SrcHostname, SrcIpAddr),
          TargetUserType = _ASIM_GetUserType(TargetUsername, ""),
          User = TargetUsername,
          IpAddr = SrcIpAddr,
          DvcIdType = iff(isnotempty(DvcId), "Other", ""),
          TargetDomainType = case(
                            array_length(split(DestinationUserName,".")) > 1, "FQDN",
                            array_length(split(DestinationUserName,"\\")) > 1, "Windows",
                            ""
                        ),
          TargetUserIdType = iff(isnotempty(TargetUserId), "UID", ""),
          TargetUsernameType = _ASIM_GetUsernameType(TargetUsername)
      | extend
          EventSchema = "Authentication",
          EventSchemaVersion = "0.1.3",
          EventType = "Logon"
      | project-away
          Source*,
          Destination*,
          Device*,
          AdditionalExtensions,
          CommunicationDirection,
          EventOutcome,
          PanOS*,
          start,
          CollectorHostName,
          EndTime,
          Activity,
          FieldDevice*,
          Flex*,
          File*,
          Old*,
          MaliciousIP*,
          OriginalLogSeverity,
          Process*,
          Protocol,
          ReceivedBytes,
          SentBytes,
          Remote*,
          Request*,
          SimplifiedDeviceAction,
          StartTime,
          TenantId,
          Threat*,
          ExternalID,
          ReportReferenceLink,
          ReceiptTime,
          Reason,
          ApplicationProtocol,
          Indicator*,
          Ip_*,
          _ResourceId
  };
  parser(disabled=disabled)