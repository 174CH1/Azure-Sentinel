Parser:
  Title: ASIM Authentication parser for VMware Carbon Black Cloud
  Version: '0.1.0'
  LastUpdated: Aug 16 2023
Product:
  Name: VMware Carbon Black Cloud
Normalization:
  Schema: Authentication
  Version: '0.1.3'
References:
- Title: ASIM Authentication Schema
  Link: https://aka.ms/ASimAuthenticationDoc
- Title: ASIM
  Link: https:/aka.ms/AboutASIM
- Title: VMware Carbon Black Cloud documentation
  Link: 
    https://developer.carbonblack.com/reference/carbon-black-cloud/data-forwarder/schema/latest/endpoint.event-1.0.0/
    https://developer.carbonblack.com/reference/cb-threathunter/latest/event-search-fields/
Description: |
  This ASIM parser supports normalizing VMware Carbon Black Cloud logs to the ASIM Authentication normalized schema. VMware Carbon Black Cloud events are captured through VMware Carbon Black Cloud data connector which ingests Carbon Black Audit, Notification and Event data into Microsoft Sentinel through the REST API.
ParserName: vimAuthenticationVMwareCarbonBlackCloud
EquivalentBuiltInParser: _Im_Authentication_VMwareCarbonBlackCloud
ParserParams:
  - Name: disabled
    Type: bool
    Default: false
  - Name: starttime
    Type: datetime
    Default: datetime(null)
  - Name: endtime
    Type: datetime
    Default: datetime(null)
  - Name: targetusername_has
    Type: string
    Default: '*'
ParserQuery: |
  let parser = (disabled: bool = false, starttime: datetime=datetime(null), endtime: datetime=datetime(null), targetusername_has: string='*') {
      CarbonBlackAuditLogs_CL
      | where not(disabled)
          and (isnull(starttime) or TimeGenerated >= starttime)
          and (isnull(endtime) or TimeGenerated <= endtime)
          and (description_s has_any ("logged in", "login") and description_s !has "connector")
          and targetusername_has == "*" or loginName_s has targetusername_has
      | extend
          EventStartTime = unixtime_milliseconds_todatetime(eventTime_d),
          EventResult = iff(description_s has "successfully", "Success", "Failure"),
          AdditionalFields = bag_pack("orgName", orgName_s, "flagged", flagged_b),
          EventSeverity = iff(flagged_b == true, "Low", "Informational")
      | extend
          EventCount = int(1),
          EventProduct = "Carbon Black Cloud",
          EventSchema = "Authentication",
          EventSchemaVersion = "0.1.3",
          EventVendor = "VMware",
          EventType = "Logon",
          EventResultDetails = iff(EventResult == "Failure", "Incorrect password", ""),
          EventOriginalResultDetails = iff(EventResult == "Failure", tostring(split(description_s, ';')[1]), "")
      | project-rename
          EventMessage = description_s,
          EventOriginalUid = eventId_g,
          TargetUsername = loginName_s,
          SrcIpAddr = clientIp_s,
          EventUid=_ItemId,
          EventOwner = orgName_s
      | extend DvcIpAddr = SrcIpAddr,
          IpAddr = SrcIpAddr
      | extend
          Dvc = coalesce(DvcIpAddr, EventProduct),
          EventEndTime = EventStartTime,
          User = TargetUsername,
          Src = SrcIpAddr,
          TargetUsernameType= _ASIM_GetUsernameType(TargetUsername)
      | project-away
          *_s,
          *_d,
          *_b,
          Computer,
          MG,
          ManagementGroupName,
          RawData,
          SourceSystem,
          TenantId 
  };
  parser(disabled=disabled, starttime=starttime, endtime=endtime, targetusername_has=targetusername_has)