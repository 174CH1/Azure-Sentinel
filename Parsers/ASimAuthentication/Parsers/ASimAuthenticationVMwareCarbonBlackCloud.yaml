Parser:
  Title: ASIM Authentication parser for VMware Carbon Black Cloud
  Version: '0.1.0'
  LastUpdated: Aug 16 2023
Product:
  Name: VMware Carbon Black Cloud
Normalization:
  Schema: Authentication
  Version: '0.1.3'
References:
- Title: ASIM Authentication Schema
  Link: https://aka.ms/ASimAuthenticationDoc
- Title: ASIM
  Link: https:/aka.ms/AboutASIM
- Title: VMware Carbon Black Cloud documentation
  Link: 
    https://developer.carbonblack.com/reference/carbon-black-cloud/data-forwarder/schema/latest/endpoint.event-1.0.0/
    https://developer.carbonblack.com/reference/cb-threathunter/latest/event-search-fields/
Description: |
  This ASIM parser supports normalizing VMware Carbon Black Cloud logs to the ASIM Authentication normalized schema. VMware Carbon Black Cloud events are captured through VMware Carbon Black Cloud data connector which ingests Carbon Black Audit, Notification and Event data into Microsoft Sentinel through the REST API.
ParserName: ASimAuthenticationVMwareCarbonBlackCloud
EquivalentBuiltInParser: _ASim_Authentication_VMwareCarbonBlackCloud
ParserParams:
  - Name: disabled
    Type: bool
    Default: false
ParserQuery: |
  let parser = (disabled: bool=false) {
      CarbonBlackAuditLogs_CL
      | where not(disabled) and description_s has_any ("logged in", "login") and description_s !has "connector"
      | extend
          EventStartTime = unixtime_milliseconds_todatetime(eventTime_d),
          EventResult = iff(description_s has "successfully", "Success", "Failure"),
          AdditionalFields = bag_pack("orgName", orgName_s, "flagged", flagged_b),
          EventSeverity = iff(flagged_b == true, "Low", "Informational")
      | extend
          EventCount = int(1),
          EventProduct = "Carbon Black Cloud",
          EventSchema = "Authentication",
          EventSchemaVersion = "0.1.3",
          EventVendor = "VMware",
          EventType = "Logon",
          EventResultDetails = iff(EventResult == "Failure", "Incorrect password", ""),
          EventOriginalResultDetails = iff(EventResult == "Failure", tostring(split(description_s, ';')[1]), "")
      | project-rename
          EventMessage = description_s,
          EventOriginalUid = eventId_g,
          TargetUsername = loginName_s,
          SrcIpAddr = clientIp_s,
          EventUid=_ItemId,
          EventOwner = orgName_s
      | extend DvcIpAddr = SrcIpAddr,
          IpAddr = SrcIpAddr
      | extend
          Dvc = coalesce(DvcIpAddr, EventProduct),
          EventEndTime = EventStartTime,
          User = TargetUsername,
          Src = SrcIpAddr,
          TargetUsernameType = _ASIM_GetUsernameType(TargetUsername),
          TargetUserType = _ASIM_GetUserType(TargetUsername, "")
      | project-away
          *_s,
          *_d,
          *_g,
          *_b,
          _ResourceId,
          Computer,
          MG,
          ManagementGroupName,
          RawData,
          SourceSystem,
          TenantId 
  };
  parser(disabled=disabled)